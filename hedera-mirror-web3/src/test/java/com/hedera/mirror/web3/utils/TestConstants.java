package com.hedera.mirror.web3.utils;

import org.apache.tuweni.bytes.Bytes;
import org.hyperledger.besu.datatypes.Address;
import org.hyperledger.besu.datatypes.Hash;
import org.hyperledger.besu.evm.Code;

import com.hedera.services.transaction.models.Id;

public class TestConstants {

    private TestConstants() {}

    public static final int chainId = 298;
    public static final Long blockNumber = 1L;
    public static final Long gasLimit = 30400L;
    public static final Long gasUsed = 30400L;
    public static final Long senderNum = 1250L;
    public static final Long contractId = 3L;
    public static final Long contractNum = 1252L;
    public static final Long senderBalance = 1_000_000L;
    public static final Address senderAddress = new Id(0,0,senderNum).asEvmAddress();
    public static final Address contractAddress = new Id(0,0,contractNum).asEvmAddress();
    public static final String gasHexValue = "0x76c0";
    public static final String gasPriceHexValue = "0x76c0";
    public static final String valueHexValue = "0x76c0";
    public static final String latestTag = "latest";
    public static final String senderHexAddress = "0x00000000000000000000000000000000000004e2";
    public static final String receiverHexAddress = "0x00000000000000000000000000000000000004e3";
    public static final String contractHexAddress = "0x00000000000000000000000000000000000004e4";
    public static final String transferHbarsToReceiverInputData = "0x80b9f03c00000000000000000000000000000000000004e3";
    public static final String multiplySimpleNumbersSelector = "0x8070450f";
    public static final String returnStorageDataSelector = "0x50e58786";
    public static final String from = "from";
    public static final String to = "to";
    public static final String gas = "gas";
    public static final String gasPrice = "gasPrice";
    public static final String value = "value";
    public static final String data = "data";
    public static final byte[] senderEvmAddress = Bytes.fromHexString(senderHexAddress)
            .toArray();
    public static final byte[] receiverEvmAddress = Bytes.fromHexString(senderHexAddress)
            .toArray();
    public static final byte[] senderAlias = Bytes.fromHexString(
                    "0x3a21034634b3df5289f084dd0bbbfa679a5e201d67bce7fb03fa90c3fe3210f916d433")
            .toArray();
    public static final Bytes initByteCodeBytes = Bytes.fromHexString("0x60806040526040518060400160405280600481526020017f74657374000000000000000000000000000000000000000000000000000000008152506000908051906020019061004f929190610062565b5034801561005c57600080fd5b50610166565b82805461006e90610105565b90600052602060002090601f01602090048101928261009057600085556100d7565b82601f106100a957805160ff19168380011785556100d7565b828001600101855582156100d7579182015b828111156100d65782518255916020019190600101906100bb565b5b5090506100e491906100e8565b5090565b5b808211156101015760008160009055506001016100e9565b5090565b6000600282049050600182168061011d57607f821691505b6020821081141561013157610130610137565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b610737806101756000396000f3fe60806040526004361061004a5760003560e01c806350e587861461004f5780636f0fccab1461007a5780638070450f146100b757806380b9f03c146100e257806381a73ad5146100fe575b600080fd5b34801561005b57600080fd5b5061006461013b565b60405161007191906104bd565b60405180910390f35b34801561008657600080fd5b506100a1600480360381019061009c91906103d2565b6101cd565b6040516100ae91906104bd565b60405180910390f35b3480156100c357600080fd5b506100cc610259565b6040516100d991906104df565b60405180910390f35b6100fc60048036038101906100f791906103ff565b610262565b005b34801561010a57600080fd5b50610125600480360381019061012091906103d2565b6102ac565b60405161013291906104bd565b60405180910390f35b60606000805461014a906105ed565b80601f0160208091040260200160405190810160405280929190818152602001828054610176906105ed565b80156101c35780601f10610198576101008083540402835291602001916101c3565b820191906000526020600020905b8154815290600101906020018083116101a657829003601f168201915b5050505050905090565b60608173ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b15801561021557600080fd5b505afa158015610229573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610252919061042c565b9050919050565b60006004905090565b8073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156102a8573d6000803e3d6000fd5b5050565b60608173ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b1580156102f457600080fd5b505afa158015610308573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610331919061042c565b9050919050565b600061034b6103468461051f565b6104fa565b905082815260208101848484011115610367576103666106b3565b5b6103728482856105ba565b509392505050565b600081359050610389816106d3565b92915050565b60008135905061039e816106ea565b92915050565b600082601f8301126103b9576103b86106ae565b5b81516103c9848260208601610338565b91505092915050565b6000602082840312156103e8576103e76106bd565b5b60006103f68482850161037a565b91505092915050565b600060208284031215610415576104146106bd565b5b60006104238482850161038f565b91505092915050565b600060208284031215610442576104416106bd565b5b600082015167ffffffffffffffff8111156104605761045f6106b8565b5b61046c848285016103a4565b91505092915050565b600061048082610550565b61048a818561055b565b935061049a8185602086016105ba565b6104a3816106c2565b840191505092915050565b6104b7816105b0565b82525050565b600060208201905081810360008301526104d78184610475565b905092915050565b60006020820190506104f460008301846104ae565b92915050565b6000610504610515565b9050610510828261061f565b919050565b6000604051905090565b600067ffffffffffffffff82111561053a5761053961067f565b5b610543826106c2565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600061057782610590565b9050919050565b600061058982610590565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156105d85780820151818401526020810190506105bd565b838111156105e7576000848401525b50505050565b6000600282049050600182168061060557607f821691505b6020821081141561061957610618610650565b5b50919050565b610628826106c2565b810181811067ffffffffffffffff821117156106475761064661067f565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6106dc8161056c565b81146106e757600080fd5b50565b6106f38161057e565b81146106fe57600080fd5b5056fea26469706673582212205fa3b31fa35964c07014abec664ec27a7ecc15aa4be5eb7ddea8a7fb3f597d2864736f6c63430008070033");
    public static final Bytes runtimeByteCodeBytes = Bytes.fromHexString("0x6080604052600436106100555760003560e01c806350e587861461005a5780636f0fccab146100855780638070450f146100c257806380b9f03c146100ed57806381a73ad51461010957806393423e9c14610146575b600080fd5b34801561006657600080fd5b5061006f610183565b60405161007c9190610413565b60405180910390f35b34801561009157600080fd5b506100ac60048036038101906100a791906104a7565b610215565b6040516100b99190610413565b60405180910390f35b3480156100ce57600080fd5b506100d7610292565b6040516100e491906104ed565b60405180910390f35b61010760048036038101906101029190610546565b61029b565b005b34801561011557600080fd5b50610130600480360381019061012b91906104a7565b6102e5565b60405161013d9190610413565b60405180910390f35b34801561015257600080fd5b5061016d600480360381019061016891906104a7565b610362565b60405161017a91906104ed565b60405180910390f35b606060008054610192906105a2565b80601f01602080910402602001604051908101604052809291908181526020018280546101be906105a2565b801561020b5780601f106101e05761010080835404028352916020019161020b565b820191906000526020600020905b8154815290600101906020018083116101ee57829003601f168201915b5050505050905090565b60608173ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610262573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061028b91906106f9565b9050919050565b60006004905090565b8073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156102e1573d6000803e3d6000fd5b5050565b60608173ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015610332573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061035b91906106f9565b9050919050565b60008173ffffffffffffffffffffffffffffffffffffffff16319050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156103bd5780820151818401526020810190506103a2565b60008484015250505050565b6000601f19601f8301169050919050565b60006103e582610383565b6103ef818561038e565b93506103ff81856020860161039f565b610408816103c9565b840191505092915050565b6000602082019050818103600083015261042d81846103da565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061047482610449565b9050919050565b61048481610469565b811461048f57600080fd5b50565b6000813590506104a18161047b565b92915050565b6000602082840312156104bd576104bc61043f565b5b60006104cb84828501610492565b91505092915050565b6000819050919050565b6104e7816104d4565b82525050565b600060208201905061050260008301846104de565b92915050565b600061051382610449565b9050919050565b61052381610508565b811461052e57600080fd5b50565b6000813590506105408161051a565b92915050565b60006020828403121561055c5761055b61043f565b5b600061056a84828501610531565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806105ba57607f821691505b6020821081036105cd576105cc610573565b5b50919050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610615826103c9565b810181811067ffffffffffffffff82111715610634576106336105dd565b5b80604052505050565b6000610647610435565b9050610653828261060c565b919050565b600067ffffffffffffffff821115610673576106726105dd565b5b61067c826103c9565b9050602081019050919050565b600061069c61069784610658565b61063d565b9050828152602081018484840111156106b8576106b76105d8565b5b6106c384828561039f565b509392505050565b600082601f8301126106e0576106df6105d3565b5b81516106f0848260208601610689565b91505092915050565b60006020828403121561070f5761070e61043f565b5b600082015167ffffffffffffffff81111561072d5761072c610444565b5b610739848285016106cb565b9150509291505056fea2646970667358221220aabfb1e89da8097b793a3d387e8a7b6346c5eeedd7af69bd969f4f409946676464736f6c63430008100033");
    public static final Code runtimeCode = Code.createLegacyCode(runtimeByteCodeBytes, Hash.hash(runtimeByteCodeBytes));

}
