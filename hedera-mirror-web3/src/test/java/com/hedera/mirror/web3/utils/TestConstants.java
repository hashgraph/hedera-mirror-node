package com.hedera.mirror.web3.utils;

import org.apache.tuweni.bytes.Bytes;
import org.hyperledger.besu.datatypes.Address;
import org.hyperledger.besu.datatypes.Hash;
import org.hyperledger.besu.evm.Code;

import com.hedera.services.transaction.models.Id;

public class TestConstants {

    private TestConstants() {}

    public static final int chainId = 298;
    public static final Long blockNumber = 1L;
    public static final Long gasLimit = 30400L;
    public static final Long gasUsed = 30400L;
    public static final Long senderNum = 1250L;
    public static final Long contractId = 3L;
    public static final Long contractNum = 1252L;
    public static final Long senderBalance = 1_000_000L;
    public static final Address senderAddress = new Id(0,0,senderNum).asEvmAddress();
    public static final Address contractAddress = new Id(0,0,contractNum).asEvmAddress();
    public static final String gasHexValue = "0x76c0";
    public static final String gasPriceHexValue = "0x76c0";
    public static final String valueHexValue = "0x76c0";
    public static final String latestTag = "latest";
    public static final String senderHexAddress = "0x00000000000000000000000000000000000004e2";
    public static final String receiverHexAddress = "0x00000000000000000000000000000000000004e3";
    public static final String contractHexAddress = "0x00000000000000000000000000000000000004e4";
    public static final String senderPublicAddress = "0x4714643c568fbd7ab37677c3d64b6326de75e0ae";
    public static final String senderBalanceHexValue = "0x000000000000000000000000000000000000000000000000000000002160ed05";
    public static final String transferHbarsToReceiverInputData = "0x80b9f03c00000000000000000000000000000000000004e3";
    public static final String getSenderBalanceInputData = "0x93423e9c0000000000000000000000004714643c568fbd7ab37677c3d64b6326de75e0ae";
    public static final String multiplySimpleNumbersSelector = "0x8070450f";
    public static final String returnStorageDataSelector = "0x50e58786";
    public static final String from = "from";
    public static final String to = "to";
    public static final String gas = "gas";
    public static final String gasPrice = "gasPrice";
    public static final String value = "value";
    public static final String data = "data";
    public static final byte[] senderEvmAddress = Bytes.fromHexString(senderHexAddress)
            .toArray();
    public static final byte[] receiverEvmAddress = Bytes.fromHexString(senderHexAddress)
            .toArray();
    public static final byte[] senderAlias = Bytes.fromHexString(
                    "0x3a21034634b3df5289f084dd0bbbfa679a5e201d67bce7fb03fa90c3fe3210f916d433")
            .toArray();
    public static final Bytes initByteCodeBytes =
            Bytes.fromHexString(
                    "0x60806040526040518060400160405280600481526020017f7465737400000000000000000000000000000000000000000000000000000000815250600090816200004a9190620002d9565b503480156200005857600080fd5b50620003c0565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620000e157607f821691505b602082108103620000f757620000f662000099565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001617fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000122565b6200016d868362000122565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620001ba620001b4620001ae8462000185565b6200018f565b62000185565b9050919050565b6000819050919050565b620001d68362000199565b620001ee620001e582620001c1565b8484546200012f565b825550505050565b600090565b62000205620001f6565b62000212818484620001cb565b505050565b5b818110156200023a576200022e600082620001fb565b60018101905062000218565b5050565b601f82111562000289576200025381620000fd565b6200025e8462000112565b810160208510156200026e578190505b620002866200027d8562000112565b83018262000217565b50505b505050565b600082821c905092915050565b6000620002ae600019846008026200028e565b1980831691505092915050565b6000620002c983836200029b565b9150826002028217905092915050565b620002e4826200005f565b67ffffffffffffffff8111156200030057620002ff6200006a565b5b6200030c8254620000c8565b620003198282856200023e565b600060209050601f8311600181146200035157600084156200033c578287015190505b620003488582620002bb565b865550620003b8565b601f1984166200036186620000fd565b60005b828110156200038b5784890151825560018201915060208501945060208101905062000364565b86831015620003ab5784890151620003a7601f8916826200029b565b8355505b6001600288020188555050505b505050505050565b61077880620003d06000396000f3fe6080604052600436106100555760003560e01c806350e587861461005a5780636f0fccab146100855780638070450f146100c257806380b9f03c146100ed57806381a73ad51461010957806393423e9c14610146575b600080fd5b34801561006657600080fd5b5061006f610183565b60405161007c9190610413565b60405180910390f35b34801561009157600080fd5b506100ac60048036038101906100a791906104a7565b610215565b6040516100b99190610413565b60405180910390f35b3480156100ce57600080fd5b506100d7610292565b6040516100e491906104ed565b60405180910390f35b61010760048036038101906101029190610546565b61029b565b005b34801561011557600080fd5b50610130600480360381019061012b91906104a7565b6102e5565b60405161013d9190610413565b60405180910390f35b34801561015257600080fd5b5061016d600480360381019061016891906104a7565b610362565b60405161017a91906104ed565b60405180910390f35b606060008054610192906105a2565b80601f01602080910402602001604051908101604052809291908181526020018280546101be906105a2565b801561020b5780601f106101e05761010080835404028352916020019161020b565b820191906000526020600020905b8154815290600101906020018083116101ee57829003601f168201915b5050505050905090565b60608173ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015610262573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061028b91906106f9565b9050919050565b60006004905090565b8073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156102e1573d6000803e3d6000fd5b5050565b60608173ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610332573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061035b91906106f9565b9050919050565b60008173ffffffffffffffffffffffffffffffffffffffff16319050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156103bd5780820151818401526020810190506103a2565b60008484015250505050565b6000601f19601f8301169050919050565b60006103e582610383565b6103ef818561038e565b93506103ff81856020860161039f565b610408816103c9565b840191505092915050565b6000602082019050818103600083015261042d81846103da565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061047482610449565b9050919050565b61048481610469565b811461048f57600080fd5b50565b6000813590506104a18161047b565b92915050565b6000602082840312156104bd576104bc61043f565b5b60006104cb84828501610492565b91505092915050565b6000819050919050565b6104e7816104d4565b82525050565b600060208201905061050260008301846104de565b92915050565b600061051382610449565b9050919050565b61052381610508565b811461052e57600080fd5b50565b6000813590506105408161051a565b92915050565b60006020828403121561055c5761055b61043f565b5b600061056a84828501610531565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806105ba57607f821691505b6020821081036105cd576105cc610573565b5b50919050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610615826103c9565b810181811067ffffffffffffffff82111715610634576106336105dd565b5b80604052505050565b6000610647610435565b9050610653828261060c565b919050565b600067ffffffffffffffff821115610673576106726105dd565b5b61067c826103c9565b9050602081019050919050565b600061069c61069784610658565b61063d565b9050828152602081018484840111156106b8576106b76105d8565b5b6106c384828561039f565b509392505050565b600082601f8301126106e0576106df6105d3565b5b81516106f0848260208601610689565b91505092915050565b60006020828403121561070f5761070e61043f565b5b600082015167ffffffffffffffff81111561072d5761072c610444565b5b610739848285016106cb565b9150509291505056fea26469706673582212203235b79866e2500bec241ed9288754ae5faf7014ef093ad3435be5dd3b9297ba64736f6c63430008100033\n");
    public static final Bytes runtimeByteCodeBytes =
            Bytes.fromHexString(
                    "0x6080604052600436106100555760003560e01c806350e587861461005a5780636f0fccab146100855780638070450f146100c257806380b9f03c146100ed57806381a73ad51461010957806393423e9c14610146575b600080fd5b34801561006657600080fd5b5061006f610183565b60405161007c9190610413565b60405180910390f35b34801561009157600080fd5b506100ac60048036038101906100a791906104a7565b610215565b6040516100b99190610413565b60405180910390f35b3480156100ce57600080fd5b506100d7610292565b6040516100e491906104ed565b60405180910390f35b61010760048036038101906101029190610546565b61029b565b005b34801561011557600080fd5b50610130600480360381019061012b91906104a7565b6102e5565b60405161013d9190610413565b60405180910390f35b34801561015257600080fd5b5061016d600480360381019061016891906104a7565b610362565b60405161017a91906104ed565b60405180910390f35b606060008054610192906105a2565b80601f01602080910402602001604051908101604052809291908181526020018280546101be906105a2565b801561020b5780601f106101e05761010080835404028352916020019161020b565b820191906000526020600020905b8154815290600101906020018083116101ee57829003601f168201915b5050505050905090565b60608173ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015610262573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061028b91906106f9565b9050919050565b60006004905090565b8073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156102e1573d6000803e3d6000fd5b5050565b60608173ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610332573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061035b91906106f9565b9050919050565b60008173ffffffffffffffffffffffffffffffffffffffff16319050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156103bd5780820151818401526020810190506103a2565b60008484015250505050565b6000601f19601f8301169050919050565b60006103e582610383565b6103ef818561038e565b93506103ff81856020860161039f565b610408816103c9565b840191505092915050565b6000602082019050818103600083015261042d81846103da565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061047482610449565b9050919050565b61048481610469565b811461048f57600080fd5b50565b6000813590506104a18161047b565b92915050565b6000602082840312156104bd576104bc61043f565b5b60006104cb84828501610492565b91505092915050565b6000819050919050565b6104e7816104d4565b82525050565b600060208201905061050260008301846104de565b92915050565b600061051382610449565b9050919050565b61052381610508565b811461052e57600080fd5b50565b6000813590506105408161051a565b92915050565b60006020828403121561055c5761055b61043f565b5b600061056a84828501610531565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806105ba57607f821691505b6020821081036105cd576105cc610573565b5b50919050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610615826103c9565b810181811067ffffffffffffffff82111715610634576106336105dd565b5b80604052505050565b6000610647610435565b9050610653828261060c565b919050565b600067ffffffffffffffff821115610673576106726105dd565b5b61067c826103c9565b9050602081019050919050565b600061069c61069784610658565b61063d565b9050828152602081018484840111156106b8576106b76105d8565b5b6106c384828561039f565b509392505050565b600082601f8301126106e0576106df6105d3565b5b81516106f0848260208601610689565b91505092915050565b60006020828403121561070f5761070e61043f565b5b600082015167ffffffffffffffff81111561072d5761072c610444565b5b610739848285016106cb565b9150509291505056fea26469706673582212203235b79866e2500bec241ed9288754ae5faf7014ef093ad3435be5dd3b9297ba64736f6c63430008100033");
    public static final Code runtimeCode = Code.createLegacyCode(runtimeByteCodeBytes, Hash.hash(runtimeByteCodeBytes));

}
