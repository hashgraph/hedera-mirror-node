hedera:
  mirror:
    monitor:
      publish:
        scenarios:
          pinger:
            properties:
              topicId: ${topic.ping}
            receiptPercent: 1.0
            tps: 0.1
            type: CONSENSUS_SUBMIT_MESSAGE
      subscribe:
        grpc:
          hcs:
            topicId: ${topic.ping}
        rest:
          transactionId:
            publishers: ["pinger"]
            samplePercent: 1.0
logging:
  level:
    root: warn
    #org.springframework.web.reactive.function.client: trace
    com.hedera.mirror.monitor: info
    com.hedera.hashgraph.sdk.Executable: error
    com.hedera.hashgraph.sdk.TransactionReceiptQuery: error
    org.springframework.cloud.kubernetes.fabric8.config: error
management:
  endpoint:
    health:
      group:
        cluster:
          include: cluster
        liveness:
          include: ping
        readiness:
          include: ping
  endpoints:
    web:
      exposure:
        include: health, info, prometheus
  metrics:
    tags:
      application: ${spring.application.name}
  prometheus:
    metrics:
      export:
        step: 60s
server:
  compression:
    enabled: true
  http2:
    enabled: true
  netty:
    connection-timeout: 3s
  port: 8082
  shutdown: graceful
spring:
  application:
    name: hedera-mirror-monitor
  cloud:
    discovery:
      enabled: false
  lifecycle:
    timeout-per-shutdown-phase: 20s
  task:
    scheduling:
      pool:
        size: 4
springdoc:
  api-docs:
    path: /api/v1/docs/openapi
  swagger-ui:
    path: /api/v1/docs
    disable-swagger-default-url: true
---
management:
  endpoint:
    health:
      group:
        cluster:
          include: cluster, release
spring:
  cloud:
    kubernetes:
      discovery:
        catalog-services-watch:
          enabled: false
      reload:
        enabled: true
      secrets:
        paths: /usr/etc/${spring.application.name}
  config:
    activate:
      on-profile: kubernetes
