"""
Represents a Hedera account holder on the network.
"""
type Account implements Accountable & Entity & Node {
    "The unique alias associated with this account."
    alias: String

    "The account charged the auto-renewal fee."
    autoRenewAccount: Account

    "The amount of time to elapse before auto-renew occurs."
    autoRenewPeriod: Duration

    "The balance of the accountable entity. Defaults to tinybars."
    balance(unit: HbarUnit = TINYBAR): Long

    "The consensus timestamp at which the entity was created."
    createdTimestamp: Timestamp

    "Whether the entity declines receiving a staking reward."
    declineReward: Boolean!

    "Whether the entity still exists in consensus node state."
    deleted: Boolean

    "The unique identifier associated with the entity."
    entityId: EntityId!

    """
    The time at which this entity will expire and be auto-renewed, if possible. If this was not explicitly set by the
    user it will be calculated as the createdTimestamp plus the autoRenewPeriod.
    """
    expirationTimestamp: Timestamp

    "An opaque, globally unique identifier specific to GraphQL."
    id: ID!

    """
    The admin key associated with this entity whose signing requirements must be met in order to modify the entity on
    the network. This returns a dynamic map that varies per entity and may be arbitrarily complex depending upon this
    key's signing requirements.
    """
    key: Object

    "The maximum number of tokens that this account can be implicitly associated with."
    maxAutomaticTokenAssociations: Int

    "The memo associated with the entity."
    memo: String!

    "The ethereum transaction nonce associated with this account."
    nonce: Long

    "The accountable entity to receive the remaining balance from the deleted entity."
    obtainer: Accountable

    """
    The pending reward the account will receive in the next reward payout. Note the value is updated at the end of each
    staking period and there may be delay to reflect the changes in the past staking period. Defaults to tinybars.
    """
    pendingReward(unit: HbarUnit = TINYBAR): Long

    "Whether the admin key must sign any transaction depositing into this account (in addition to all withdrawals)."
    receiverSigRequired: Boolean

    "The account to which this account is staked. Mutually exclusive with stakedNode."
    stakedAccount: Account

    """
    The staking period during which either the staking settings for this account changed (such as starting staking or
    changing stakedNode) or the most recent reward was earned, whichever is later. If this account is not currently
    staked to a node, then the value is null.
    """
    stakePeriodStart: Timestamp

    "A consensus timestamp range with an inclusive from timestamp and an exclusive to timestamp."
    timestamp: TimestampRange!

    "The type of Hedera entity."
    type: EntityType!
}

"""
The unique identifier to find a specific account. Only one of the given fields can be present at a
time otherwise an error will occur.
"""
input AccountInput {

    "A RFC 4648 Base32, with the trailing '=' characters removed, string that represents an account alias."
    alias: String @Pattern(regexp: "^[A-Z2-7]+$")

    "The unique shard, realm, and number associated with a Hedera account."
    entityId: EntityIdInput

    "A hex-encoded string that represents a 20-byte EVM address."
    evmAddress: String @Pattern(regexp: "^(0x)?[a-fA-F0-9]{40}$")

    "An opaque, globally unique identifier specific to GraphQL."
    id: ID @Pattern(regexp: "^[a-zA-Z0-9+/=]+$")
}
