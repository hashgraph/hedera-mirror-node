{{- if .Values.test.enabled -}}
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    helm.sh/hook: test-success
    helm.sh/hook-delete-policy: hook-succeeded
  labels:
    {{- include "hedera-mirror-rest.labels" . | nindent 4 }}
  name: {{ include "hedera-mirror-rest.fullname" . }}-test
  namespace: {{ include "hedera-mirror-rest.namespace" . }}
data:
  test.sh: |-
    #!/usr/bin/env bash
    set -o pipefail
    set -o errexit

    URI='http://{{ include "hedera-mirror-rest.fullname" . }}:{{ .Values.service.port }}/api/v1'

    function setup() {
      apk add -qu curl jq
    }

    # Infinite loop is okay since helm test itself has a timeout
    function has_data() {
      local name="${1}"
      until (curl -s "${URI}/${name}?limit=1" | jq -e ".${name} | length >= 1"); do
        echo "Waiting for ${name} data" >&3
        sleep 2
      done
    }

    @test "Has accounts" {
      has_data "accounts"
    }

    @test "Has balances" {
      has_data "balances"
    }

    @test "Has recent transactions" {
      has_data "transactions"
      local timestamp=$(curl -s "${URI}/transactions?limit=1" | jq -re '.transactions[0].consensus_timestamp')

      until [[ $(curl -s "${URI}/transactions?limit=1" | jq -re '.transactions[0].consensus_timestamp') > "${timestamp}" ]]; do
        echo "Waiting for new data" >&3
        sleep 1
      done
    }
{{- end -}}
