global:
  namespaceOverride: ""
  rbac:
    pspEnabled: false

labels: {}

loki:
  enabled: true
  loki:
    config:
      table_manager:
        retention_deletes_enabled: true
        retention_period: 2184h
    networkPolicy:
      enabled: true
    persistence:
      enabled: true
    rbac:
      pspEnabled: false
    resources:
      limits:
        cpu: 200m
        memory: 256Mi
      requests:
        cpu: 50m
        memory: 64Mi
    serviceMonitor:
      enabled: true
  promtail:
    rbac:
      pspEnabled: false
    resources:
      limits:
        cpu: 125m
        memory: 100Mi
      requests:
        cpu: 50m
        memory: 32Mi
    serviceMonitor:
      enabled: true

networkPolicy:
  enabled: false

priorityClass:
  enabled: true

prometheus-adapter:
  enabled: true
  priorityClassName: low
  prometheus:
    url: http://common-mirror-prometheus-prometheus
  resources:
    limits:
      cpu: 50m
      memory: 100Mi
    requests:
      cpu: 25m
      memory: 50Mi
  rules:
    default: false

prometheus:
  alertmanager:
    alertmanagerSpec:
      priorityClassName: low
      resources:
        limits:
          cpu: 50m
          memory: 80Mi
        requests:
          cpu: 30m
          memory: 30Mi
    config:
      receivers:
        - name: 'null'
      route:
        group_by:
          - namespace
          - alertname
        group_wait: 30s
        receiver: 'null'
        repeat_interval: 7d
        routes: []
      templates:
        - '/etc/alertmanager/config/slack.tmpl'
    enabled: true
    templateFiles:
      slack.tmpl: |-
        {{- define "slack.title" -}}
        {{- .Status | title }} {{ .CommonLabels.alertname }}{{ if .CommonLabels.namespace }} in {{ .CommonLabels.namespace }}{{ end }}
        {{- end -}}

        {{- define "slack.text" -}}
        {{ range .Alerts -}}
        *Summary:* {{ if .Annotations.summary }}{{ .Annotations.summary }}{{ else }}{{ .Annotations.message }}{{ end }}{{"\n"}}
        {{- if .Annotations.description }} *Description:* {{ .Annotations.description }}{{"\n"}}{{ end }}
        *Prometheus:* *<{{ .GeneratorURL }}|:fire:>* {{- if .Annotations.dashboard_url }}     *Grafana:* *<{{ .Annotations.dashboard_url }}|:chart_with_upwards_trend:>*{{ end }}{{- if .Annotations.runbook_url }}      *Runbook:* *<{{ .Annotations.runbook_url }}|:notebook:>*{{ end }}

        *Labels:*
          {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`
          {{ end }}
        {{ end }}
        {{- end -}}
  coreDns:
    enabled: false
  enabled: true
  grafana:
    additionalDataSources:
      - name: AlertManager
        type: camptocamp-prometheus-alertmanager-datasource
        access: proxy
        url: http://{{ .Release.Name }}-prometheus-alertmanager:9093
      - name: Loki
        type: loki
        access: proxy
        url: http://{{ .Release.Name }}-loki:3100
        jsonData:
          maxLines: 500
    adminPassword: ""
    defaultDashboardsEnabled: true
    grafana.ini:
      server:
        root_url: "%(protocol)s://%(domain)s/grafana/"
    ingress:
      annotations:
        traefik.ingress.kubernetes.io/router.middlewares: '{{ include "hedera-mirror-common.namespace" . }}-{{ .Release.Name }}-grafana@kubernetescrd'
      enabled: true
      hosts: [""]
      middleware:
        circuitBreaker: NetworkErrorRatio() > 0.10 || ResponseCodeRatio(500, 600, 0, 600) > 0.25
        connectionsPerIP: 10
        enabled: true
        ipWhitelist:
          - 0.0.0.0/0
        rateLimit:
          average: 50
          burst: 100
      path: "/grafana"
    plugins:
      - camptocamp-prometheus-alertmanager-datasource
    rbac:
      pspEnabled: false
    resources:
      limits:
        cpu: 300m
        memory: 300Mi
      requests:
        cpu: 150m
        memory: 75Mi
  kube-state-metrics:
    podSecurityPolicy:
      enabled: false
    resources:
      limits:
        cpu: 10m
        memory: 64Mi
      requests:
        cpu: 5m
        memory: 16Mi
  kubeApiserver:
    enabled: false
  kubeControllerManager:
    enabled: false
  kubeDns:
    enabled: true
  kubeEtcd:
    enabled: false
  kubelet:
    enabled: false
  kubeScheduler:
    enabled: false
  prometheus-node-exporter:
    hostNetwork: false
    rbac:
      pspEnabled: false
    resources:
      limits:
        cpu: 100m
        memory: 50Mi
      requests:
        cpu: 50m
        memory: 20Mi
  prometheus:
    additionalPodMonitors:
      - name: traefik
        podMetricsEndpoints:
          - port: traefik
            path: /metrics
            interval: 15s
        selector:
          matchLabels:
            app.kubernetes.io/name: traefik
    prometheusSpec:
      image:
        tag: v2.20.0
      podMonitorSelectorNilUsesHelmValues: false
      priorityClassName: low
      resources:
        limits:
          cpu: 750m
          memory: 1Gi
        requests:
          cpu: 250m
          memory: 250Mi
      retention: 30d
      ruleSelectorNilUsesHelmValues: false
      scrapeInterval: 30s
      serviceMonitorSelectorNilUsesHelmValues: false
      storageSpec:
        volumeClaimTemplate:
          spec:
            resources:
              requests:
                storage: 50Gi
      walCompression: true
  prometheusOperator:
    namespaces:
      additional: []
      releaseNamespace: true
    resources:
      limits:
        cpu: 100m
        memory: 100Mi
      requests:
        cpu: 50m
        memory: 50Mi

traefik:
  additionalArguments:
    - "--accesslog=true"
    - "--entrypoints.websecure.http.tls=true"
    - "--entrypoints.grpc.address=:5600"
    - "--metrics.prometheus=true"
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            topologyKey: kubernetes.io/hostname
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: traefik
  deployment:
    replicas: 3
  enabled: true
  globalArguments: []
  podDisruptionBudget:
    enabled: true
    minAvailable: 1
  ports:
    grpc:
      port: 5600
      expose: true
  priorityClassName: critical
  resources:
    requests:
      cpu: 100m
      memory: 50Mi
    limits:
      cpu: 500m
      memory: 300Mi
  service:
    spec:
      externalTrafficPolicy: Local
