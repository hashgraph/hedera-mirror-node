{{- if .Values.zfs.enabled -}}
apiVersion: v1
kind: ConfigMap
metadata:
  labels: {{ include "hedera-mirror-common.labels" . | nindent 4 }}
    app: zfs-init
  name: {{ .Release.Name }}-zfs-init
  namespace: {{ include "hedera-mirror-common.namespace" . }}
data:
  entrypoint.sh: |
    #!/usr/bin/env bash

    set -euxo pipefail

    ROOT_MOUNT_DIR="${ROOT_MOUNT_DIR:-/node}"
    DISK_SIZE_COORDINATOR="${DISK_SIZE_COORDINATOR:-75GB}"
    DISK_SIZE_WORKER="${DISK_SIZE_WORKER:-152GB}"

    echo "Getting node metadata"
    NODE_NAME="$(curl -sS http://metadata.google.internal/computeMetadata/v1/instance/name -H 'Metadata-Flavor: Google')"
    ZONE="$(curl -sS http://metadata.google.internal/computeMetadata/v1/instance/zone -H 'Metadata-Flavor: Google' | awk -F  "/" '{print $4}')"
    LABELS="$(gcloud compute instances describe "${NODE_NAME}" --zone="${ZONE}" --flatten="metadata.kube-labels[]")"
    CITUS_ROLE="$(echo "${LABELS}" | grep -o 'citus-role[^, }]*' | sed -n 's/.*citus-role=\(.*\).*/\1/p')"
    DISK_NAME="${NODE_NAME}-zfs"
    echo "Setting up disk ${DISK_NAME} for ${CITUS_ROLE}"

    if [[ "$CITUS_ROLE" == *"worker"* ]]; then
        DISK_SIZE="${DISK_SIZE_WORKER}"
    else
        DISK_SIZE="${DISK_SIZE_COORDINATOR}"
    fi

    ACTUAL_SIZE=$(gcloud compute disks list --filter="name:${DISK_NAME}" --format="value(sizeGb)")
    if [[ -z "${ACTUAL_SIZE}" ]]; then
        echo "Creating ${DISK_NAME} for ${CITUS_ROLE} with size ${DISK_SIZE}"
        gcloud compute disks create "${DISK_NAME}" --size="${DISK_SIZE}" --zone="${ZONE}" --type=pd-balanced --quiet
    else
        echo "${DISK_NAME} already exists for ${CITUS_ROLE}"
    fi

    if [[ "${ACTUAL_SIZE}" -lt "${DISK_SIZE%GB}" ]]; then
        echo "Increasing disk size from ${ACTUAL_SIZE} to ${DISK_SIZE}"
        gcloud compute disks resize "${DISK_NAME}" --size="${DISK_SIZE}" --zone="${ZONE}" --quiet
    fi

    if (! gcloud compute instances describe "${NODE_NAME}" --zone "${ZONE}" --format '(disks[].source)' | grep "${DISK_NAME}" > /dev/null); then
        echo "Attaching ${DISK_NAME} to ${NODE_NAME}"
        gcloud compute instances attach-disk "${NODE_NAME}" --device-name=sdb --disk "${DISK_NAME}" --zone "${ZONE}" --quiet
    else
        echo "${DISK_NAME} is already attached to ${NODE_NAME}"
    fi

    chroot "${ROOT_MOUNT_DIR}" /bin/bash -x <<'EOF'

      echo "Installing zfs"
      apt-get update
      apt-get install -y zfsutils-linux
      export POOL="{{ .Values.zfs.parameters.poolname }}"
      echo "Configuring zpool ${POOL}"
      partprobe

      if (zfs list | grep -q "${POOL}"); then
          echo "Found existing pool. Skipping creation"
      elif (zpool create -o autoexpand=on "${POOL}" /dev/sdb); then
          echo "Successfully created pool"
      elif (zpool import -f "${POOL}"); then
          echo "Successfully imported pool"
      else
          echo "Unable to create pool. Manual intervention necessary"
          exit 1
      fi

      zpool set autoexpand=on "${POOL}"
      zpool online -e "${POOL}" /dev/sdb
      zfs list
    EOF
    {{- end -}}