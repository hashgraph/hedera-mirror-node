{{- if .Values.global.db.initWithDeployment -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: mirror-timescaledb-patroni-callbacks
data:
  on_start: |
    #!/bin/bash
    echo "$0 on $2, running Mirror Node custom patroni startup callback"

    if [ "$2" != "master" ]
    then
      echo "This script should only run on the master instance. Exiting ..."
      exit 0
    fi

    echo "Starting Mirror Node main user and db creation"

    # swap hard coded values for .Values or make secret to be deployed from file
    DB_NAME=mirror_node
    DB_PASSWORD=mirror_node_pass
    DB_USERNAME=mirror_node
    psql --set ON_ERROR_STOP=1 \
          --set dbname=${DB_NAME} \
          --set password=${DB_PASSWORD} \
          --set username=${DB_USERNAME} <<__SQL__

      create user :username with createrole password ':password';
      create database :dbname with owner :username;
      create extension pg_stat_statements;
    __SQL__

    echo "$0 creating api users"

    # swap hard coded values for .Values or make secret to be deployed from file
    psql "dbname=${DB_NAME} host=localhost user=${DB_USERNAME} password=${DB_PASSWORD}" \
          --set ON_ERROR_STOP=1 \
          --set username=${DB_USERNAME} \
          --set apiPassword=mirror_api_pass \
          --set apiUsername=mirror_api \
          --set grpcPassword=mirror_grpc_pass \
          --set grpcUsername=mirror_grpc <<__SQL__

      create user :apiUsername with login password ':apiPassword';
      create user :grpcUsername with login password ':grpcPassword';
      alter default privileges in schema public grant select on tables to :apiUsername;
      alter default privileges in schema public grant select on tables to :grpcUsername;
      grant select on all tables in schema public to :apiUsername;
      grant select on all tables in schema public to :grpcUsername;

    __SQL__

    echo "$0 adding pg_stat_statements extension"

    psql "dbname=${DB_NAME} host=localhost user=${DB_USERNAME} password=${DB_PASSWORD}" \
          --set ON_ERROR_STOP=1 <<__SQL__

      create extension pg_stat_statements;
    __SQL__

    echo "$0 completed Mirror Node custom patroni startup callback"
  {{- end -}
