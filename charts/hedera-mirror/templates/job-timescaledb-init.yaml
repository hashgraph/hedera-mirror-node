{{- if .Values.timescaledb.enabled -}}
apiVersion: batch/v1
kind: Job
metadata:
  labels: {{- include "hedera-mirror.labels" . | nindent 4 }}
  name: {{ include "hedera-mirror.dbHost" . }}-init-job
  namespace: {{ include "hedera-mirror.namespace" . }}
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  backoffLimit: 1
  template:
    spec:
      containers:
        - name: init-mirrornode-db
          image: "{{ .Values.timescaledb.image.repository }}:{{ .Values.timescaledb.image.tag }}"
          command:
            - sh
            - -c
            - |
              set -e

              # wait for the access node to allow connections
              while ! pg_isready -U postgres -h {{ include "hedera-mirror.dbHost" . }}; do sleep 1; done;

              # wait for all data nodes to be added to access node
              while true; do
                count=$(echo "${GET_DATA_NODES_COUNT_COMMAND}" | psql -d "${ACCESS_SVC_CONNSTR_POSTGRES}" --file=- --set ON_ERROR_STOP=1 -At)
                [ "$count" -eq "{{ .Values.timescaledb.dataNodes }}" ] && break || sleep 1
              done

              psql --echo-queries -d "${ACCESS_SVC_CONNSTR_POSTGRES}" --set ON_ERROR_STOP=1 -f ${DB_INIT_DIR}/users_v2.sql
              echo 'Completed db initialization and user creation for mirror node'

              psql --echo-queries -d "${ACCESS_SVC_CONNSTR_MIRRORNODE}" --set ON_ERROR_STOP=1 -f ${DB_INIT_DIR}/schema_v2.sql
              echo 'Completed db schema initialization'

              psql --echo-queries -d "${ACCESS_SVC_CONNSTR_POSTGRES}" --set ON_ERROR_STOP=1 -f ${DB_INIT_DIR}/path_v2.sql
              echo 'Completed db search path setting'

              echo 'Completed db initialization for mirror node'
          env:
            - name: ACCESS_SVC_CONNSTR_POSTGRES
              value: host={{ include "hedera-mirror.dbHost" . }} user=postgres connect_timeout=3 sslmode=disable password={{ .Values.timescaledb.credentials.accessNode.superuser }}
            - name: ACCESS_SVC_CONNSTR_MIRRORNODE
              value: host={{ include "hedera-mirror.dbHost" . }} dbname={{ .Values.importer.config.hedera.mirror.importer.db.name }} user={{ .Values.importer.config.hedera.mirror.importer.db.owner }} connect_timeout=3 sslmode=disable password={{ .Values.importer.config.hedera.mirror.importer.db.ownerPassword }}
            - name: DB_INIT_DIR
              value: /usr/etc/db-init
            - name: GET_DATA_NODES_COUNT_COMMAND
              value: select count(*) from pg_foreign_server
          volumeMounts:
            - name: timescaledb-init-volume
              mountPath: /usr/etc/db-init
      volumes:
        - name: timescaledb-init-volume
          secret:
            defaultMode: 420
            secretName: {{ include "hedera-mirror.dbHost" . }}-init
      restartPolicy: Never
{{- end -}}
