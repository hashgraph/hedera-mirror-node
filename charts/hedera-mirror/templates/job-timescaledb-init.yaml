apiVersion: batch/v1
kind: Job
metadata:
  labels:
    {{- include "hedera-mirror.labels" . | nindent 4 }}
  name: {{ printf "%s-timescaledb-init-job" .Release.Name }}
  namespace: {{ include "hedera-mirror.namespace" . }}
  annotations:
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  backoffLimit: 4
  template:
    spec:
      containers:
        - name: init-mirrornode-db
          image: timescaledev/timescaledb-ha:pg12-ts2.0.0-rc3
          command:
            - sh
            - -c
            - >
              while ! pg_isready -U postgres -h {{ printf "%s-timescaledb-data" .Release.Name }}; do sleep 1; done;
              echo "$(<${DB_INIT_FILE})" | psql --file=- --echo-queries -d "${ACCESS_SVC_CONNSTR_POSTGRES}" \
                                --set ON_ERROR_STOP=1 -f ${DB_INIT_FILE}
          env:
            - name: ACCESS_SVC_CONNSTR_POSTGRES
              value: host=mirror-timescaledb user=postgres connect_timeout=3 sslmode=disable password={{ .Values.timescaledb.credentials.accessNode.superuser }}
            - name: DB_INIT_FILE
              value: /usr/etc/db-init/init.sql
          volumeMounts:
            - name: timescale-db-init-volume
              mountPath: /usr/etc/db-init
      volumes:
        - name: timescale-db-init-volume
          secret:
            defaultMode: 420
            secretName: {{ printf "%s-timescaledb-init" .Release.Name  }}
      restartPolicy: OnFailure
  ttlSecondsAfterFinished: 600
