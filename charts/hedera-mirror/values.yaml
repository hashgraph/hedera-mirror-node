applicationResource:
  enabled: false
  partnerId: ""
  partnerName: ""
  solutionId: ""

global:
  db:
    host: RELEASE-NAME-timescaledb  # RELEASE-NAME will be replaced with actual release by children charts
  namespaceOverride: ""
  redis:
    host: RELEASE-NAME-redis  # RELEASE-NAME will be replaced with actual release by children charts
    password: redis_password
  rest:
    username: mirror_api
    password: mirror_api_pass
  useReleaseForNameLabel: false  # Set the name label to the release name for Marketplace

grpc:
  config:
    hedera:
      mirror:
        grpc:
          db:
            password: mirror_grpc_pass
            username: mirror_grpc
  enabled: true

importer:
  config:
    hedera:
      mirror:
        importer:
          db:
            name: mirror_node
            password: mirror_node_pass
            username: mirror_node
    spring:
      debug: true
      flyway:
        baselineVersion: 1.99.0
  enabled: true
  redis:
    sentinel:
      masterSet: mirror
  image:
    pullPolicy: Always
    tag: 0.18.0-tdb

labels: {}

monitor:
  enabled: true

networkPolicy:
  enabled: false

postgresql:
  enabled: true
  metrics:
    enabled: false
    resources:
      limits:
        cpu: 50m
        memory: 50Mi
      requests:
        cpu: 20m
        memory: 25Mi
  nameOverride: postgres
  networkPolicy:
    enabled: false
  persistence:
    size: 500Gi
  pgpool:
    adminPassword: password
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: pgpool
    customUsersSecret: '{{ printf "%s-pgpool-init" .Release.Name }}'
    podLabels:
      role: db
    pdb:
      create: true
    resources:
      limits:
        cpu: 200m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 128Mi
  pgpoolImage:
    debug: true
  postgresqlImage:
    debug: true
    tag: 13.0.0-debian-10-r35
  postgresql:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: postgresql
    initdbScriptsSecret: '{{ printf "%s-postgresql-init" .Release.Name }}'
    password: password
    replicaCount: 1
    repmgrPassword: password
    resources:
      limits:
        cpu: 1500m
        memory: 1000Mi
      requests:
        cpu: 250m
        memory: 500Mi
    repmgrLogLevel: DEBUG

redis:
  cluster:
    slaveCount: 1
  enabled: true
  metrics:
    resources:
      limits:
        cpu: 100m
        memory: 50Mi
      requests:
        cpu: 50m
        memory: 25Mi
    serviceMonitor:
      enabled: true
  podDisruptionBudget:
    enabled: true
  securityContext:
    runAsGroup: 1001
    runAsUser: 1001
  sentinel:
    enabled: true
    masterSet: mirror
    resources:
      limits:
        cpu: 100m
        memory: 50Mi
      requests:
        cpu: 50m
        memory: 25Mi
  serviceAccount:
    create: true
  slave:  # Both master and slave are configured via slave property when sentinel is enabled
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: redis
    resources:
      limits:
        cpu: 1500m
        memory: 1000Mi
      requests:
        cpu: 250m
        memory: 500Mi
    statefulset:
      updateStrategy: RollingUpdate
  usePasswordFile: true

rest:
  enabled: true

# https://github.com/timescale/timescaledb-kubernetes/tree/master/charts/timescaledb-single
# configuration options (administration guide) at https://github.com/timescale/timescaledb-kubernetes/blob/master/charts/timescaledb-single/admin-guide.md
timescaledb:
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            topologyKey: kubernetes.io/hostname
            labelSelector:
              matchLabels:
                app.kubernetes.io/component: timescaledb
  #  bootstrapFromBackup:
  #    enabled: true
  #    secretName: pgbackrest-bootstrap
  callbacks:
    configMap: timescaledb-init-callback
  clusterName: mirror-timescaledb
  enabled: true
  # relies only on ClusterIP service creation
  loadBalancer:
    enabled: false
  #  patroni:
  #    bootstrap:
  #      restore_or_initdb:
  #        command: >
  #          /etc/timescaledb/scripts/restore_or_initdb.sh
  #          --encoding=UTF8
  #          --locale=C.UTF-8
  #      post_init: /etc/timescaledb/scripts/post_init.sh
  persistentVolumes:
    data:
      size: 500Gi
    wal:
      size: 20Gi
  # number of pods, disables ha when set to 1
  #  replicaCount: 1
  secretNames:
    certificate: mirror-timescaledb-certificate
    credentials: mirror-timescaledb-credentials
    pgbackrest: mirror-timescaledb-pgbackrest

