applicationResource:
  enabled: false
  partnerId: ""
  partnerName: ""
  solutionId: ""

global:
  db:
    host: RELEASE-NAME-postgres-pgpool  # RELEASE-NAME will be replaced with actual release by children charts
  namespaceOverride: ""
  redis:
    host: RELEASE-NAME-redis  # RELEASE-NAME will be replaced with actual release by children charts
    password: redis_password
  rest:
    username: mirror_api
    password: mirror_api_pass
  useReleaseForNameLabel: false  # Set the name label to the release name for Marketplace

grpc:
  config:
    hedera:
      mirror:
        grpc:
          db:
            password: mirror_grpc_pass
            username: mirror_grpc
  enabled: true

importer:
  config:
    hedera:
      mirror:
        importer:
          db:
            name: mirror_node
            password: mirror_node_pass
            username: mirror_node
  enabled: true

labels: {}

networkPolicy:
  enabled: false

postgresql:
  enabled: true
  metrics:
    enabled: false
    resources:
      limits:
        cpu: 50m
        memory: 50Mi
      requests:
        cpu: 20m
        memory: 25Mi
  nameOverride: postgres
  networkPolicy:
    enabled: false
  persistence:
    size: 500Gi
  pgpool:
    adminPassword: password
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: pgpool
    customUsersSecret: '{{ printf "%s-pgpool-init" .Release.Name }}'
    podLabels:
      role: db
    pdb:
      create: true
    replicaCount: 2
    resources:
      limits:
        cpu: 200m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 128Mi
  pgpoolImage:
    debug: true
  postgresqlImage:
    debug: true
    tag: 12.4.0-debian-10-r49
  postgresql:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: postgresql
    initdbScriptsSecret: '{{ printf "%s-postgresql-init" .Release.Name }}'
    password: password
    repmgrPassword: password
    resources:
      limits:
        cpu: 1500m
        memory: 1000Mi
      requests:
        cpu: 250m
        memory: 500Mi
    repmgrLogLevel: DEBUG

redis:
  enabled: true
  metrics:
    resources:
      limits:
        cpu: 50m
        memory: 50Mi
      requests:
        cpu: 20m
        memory: 25Mi
    serviceMonitor:
      enabled: true
  podDisruptionBudget:
    enabled: true
  sentinel:
    enabled: true
    masterSet: mirror
    resources:
      limits:
        cpu: 50m
        memory: 50Mi
      requests:
        cpu: 20m
        memory: 25Mi
  serviceAccount:
    create: true
  slave:  # Both master and slave are configured via slave property when sentinel is enabled
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: redis
    resources:
      limits:
        cpu: 1500m
        memory: 1000Mi
      requests:
        cpu: 250m
        memory: 500Mi
    statefulset:
      updateStrategy: RollingUpdate
  usePasswordFile: true

rest:
  enabled: true
