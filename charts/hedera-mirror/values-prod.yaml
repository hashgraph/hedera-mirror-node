# These values are production values used in combination with the hedera-mirror-common chart
alertmanager:
  inhibitRules:
    enabled: true

global:
  middleware: true

graphql:
  alertmanager:
    inhibitRules:
      enabled: true
  hpa:
    enabled: true
    minReplicas: 2
  podDisruptionBudget:
    enabled: true
  priorityClassName: medium
  prometheusRules:
    enabled: true
  serviceMonitor:
    enabled: true

grpc:
  alertmanager:
    inhibitRules:
      enabled: true
  hpa:
    enabled: true
    minReplicas: 2
  podDisruptionBudget:
    enabled: true
  priorityClassName: medium
  prometheusRules:
    enabled: true
  serviceMonitor:
    enabled: true

importer:
  alertmanager:
    inhibitRules:
      enabled: true
  podMonitor:
    enabled: true
  priorityClassName: high
  prometheusRules:
    enabled: true
  replicas: 1

monitor:
  alertmanager:
    inhibitRules:
      enabled: true
  priorityClassName: medium
  prometheusRules:
    enabled: true
  serviceMonitor:
    enabled: true

postgresql:
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
  pgpool:
    priorityClassName: critical
    replicaCount: 2
  postgresql:
    priorityClassName: critical
    upgradeRepmgrExtension: false
    replicaCount: 2

redis:
  metrics:
    enabled: true
    sentinel:
      enabled: true
  replica:
    priorityClassName: critical
    replicaCount: 3

rest:
  alertmanager:
    inhibitRules:
      enabled: true
  hpa:
    minReplicas: 2
  podDisruptionBudget:
    enabled: true
  priorityClassName: medium
  prometheusRules:
    enabled: true
  serviceMonitor:
    enabled: true

restjava:
  alertmanager:
    inhibitRules:
      enabled: true
  hpa:
    enabled: true
    minReplicas: 2
  podDisruptionBudget:
    enabled: true
  priorityClassName: medium
  prometheusRules:
    enabled: true
  serviceMonitor:
    enabled: true

rosetta:
  alertmanager:
    inhibitRules:
      enabled: true
  hpa:
    minReplicas: 2
  podDisruptionBudget:
    enabled: true
  priorityClassName: medium
  prometheusRules:
    enabled: true
  serviceMonitor:
    enabled: true

stackgres:
  coordinator:
    instances: 2
    resources:
      cpu: 7350m
      memory: 24Gi
      requests:
        containers:
          cluster-controller:
            cpu: 500m
          envoy:
            cpu: 750m
          patroni:
            cpu: 7350m
          pgbouncer:
            cpu: 300m
          prometheus-postgres-exporter:
            cpu: 100m
    persistentVolume:
      size: 256Gi
      storageClass: zfs
  worker:
    instances: 3
    replicasPerInstance: 1
    resources:
      cpu: 7350m
      memory: 24Gi
      requests:
        containers:
          cluster-controller:
            cpu: 500m
          envoy:
            cpu: 750m
          patroni:
            cpu: 7350m
          pgbouncer:
            cpu: 300m
          prometheus-postgres-exporter:
            cpu: 100m
    persistentVolume:
      size: 3000Gi
      storageClass: zfs

web3:
  alertmanager:
    inhibitRules:
      enabled: true
  hpa:
    enabled: true
    minReplicas: 2
  podDisruptionBudget:
    enabled: true
  priorityClassName: medium
  prometheusRules:
    enabled: true
  serviceMonitor:
    enabled: true
