affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          topologyKey: kubernetes.io/hostname
          labelSelector:
            matchLabels:
              app.kubernetes.io/component: importer

annotations: {}

config:
  hedera:
    mirror:
      importer:
        dataPath: /var/lib/hedera-mirror-importer
        db: {}

fullnameOverride: ""

global:
  namespaceOverride: ""

image:
  pullPolicy: IfNotPresent
  repository: gcr.io/mirrornode/hedera-mirror-importer
  tag: ""  # Default to the chart's app version

imagePullSecrets: []

labels: {}

livenessProbe: null
#  httpGet:
#    path: /actuator/health
#    port: http
#  initialDelaySeconds: 60
#  periodSeconds: 30
#  timeoutSeconds: 2

nameOverride: ""

networkPolicy:
  enabled: false

nodeSelector: {}

persistence:
  accessModes:
    - ReadWriteOnce
  annotations: {}
  enabled: true
  size: 10Gi
  storageClass: ""

podDisruptionBudget:
  enabled: false
  # maxUnavailable: 0
  # minAvailable: 1

podManagementPolicy: OrderedReady

podMonitor:
  enabled: false
  interval: 30s

podSecurityContext:
  fsGroup: 1000

priorityClassName: ""

rbac:
  enabled: true

readinessProbe:
  httpGet:
    path: /actuator/health
    port: http
  initialDelaySeconds: 60
  timeoutSeconds: 2

replicas: 1

resources:
  limits:
    cpu: 500m
    memory: 750Mi
  requests:
    cpu: 200m
    memory: 256Mi

revisionHistoryLimit: 3

securityContext:
  capabilities:
    drop: [ALL]
  readOnlyRootFilesystem: true
  runAsGroup: 1000
  runAsNonRoot: true
  runAsUser: 1000

serviceAccount:
  create: true
  # The name of the service account to use. If not set and create is true, a name is generated using the fullname template
  name:


terminationGracePeriodSeconds: 30

tolerations: []

# Will have more than one replica in production, so need a rolling update to ensure at least one pod is ready
updateStrategy:
  type: RollingUpdate
