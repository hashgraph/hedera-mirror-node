name: "Module Tests v2 Schema"

on:
  pull_request:
    branches: [ master, release/** ]

env:
  MAVEN_CLI_OPTS: --batch-mode --no-transfer-progress --show-version
    -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -Djib.skip -Ddocker.skip
  MAVEN_SPRING_OPTS: -Dembedded.postgresql.docker-image=timescaledev/timescaledb-ha:pg12.5-ts2.0.0-p0 -Dgroups=!v1
    -Dspring.flyway.locations=filesystem:classpath:/db/migration/v2,../hedera-mirror-importer/src/main/resources/db/migration/v2
    -Dspring.flyway.baseline-version=1.999.999 -Dspring.flyway.target=2.999.999

jobs:
  grpc-build:
    name: GRPC Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # If this run was triggered by a pull request event, then checkout
      # the head of the pull request instead of the merge commit.
      - run: git checkout HEAD^2
        if: ${{ github.event_name == 'pull_request' }}

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          key: ${{ runner.os }}-m2-${{ secrets.CACHE_VERSION }}-${{ hashFiles('hedera-mirror-grpc/pom.xml') }}
          path: ~/.m2
          restore-keys: ${{ runner.os }}-m2

      - name: Maven Install
        run: ./mvnw ${MAVEN_CLI_OPTS} ${MAVEN_SPRING_OPTS} install -DskipTests

      - name: Maven Verify
        run: ./mvnw ${MAVEN_CLI_OPTS} ${MAVEN_SPRING_OPTS} verify -pl hedera-mirror-grpc/

      - name: Upload grpc test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: grpc-test-results
          path: hedera-mirror-grpc/target/surefire-reports/*
          retention-days: 7

  importer-build:
    name: Importer Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # If this run was triggered by a pull request event, then checkout
      # the head of the pull request instead of the merge commit.
      - run: git checkout HEAD^2
        if: ${{ github.event_name == 'pull_request' }}

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          key: ${{ runner.os }}-m2-${{ secrets.CACHE_VERSION }}-${{ hashFiles('hedera-mirror-importer/pom.xml') }}
          path: ~/.m2
          restore-keys: ${{ runner.os }}-m2

      - name: Maven Verify
        run: ./mvnw ${MAVEN_CLI_OPTS} ${MAVEN_SPRING_OPTS} verify -pl hedera-mirror-importer/

      - name: Upload importer test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: importer-test-results
          path: hedera-mirror-importer/target/surefire-reports/*
          retention-days: 7

  rest-test:
    name: REST Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      working-directory: ./hedera-mirror-rest

    services:
      localstack:
        image: localstack/localstack:0.11.3
        env:
          SERVICES: s3
        ports:
          - 4566:4566
      timescaledb:
        image: timescaledev/timescaledb-ha:pg12-ts2.0.0-rc3
        env:
          POSTGRES_DB: mirror_node_integration
          POSTGRES_PASSWORD: mirror_api_pass
          POSTGRES_USER: mirror_api
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install npm dependencies
        run: npm ci
        working-directory: ${{env.working-directory}}

      - name: Cache Node packages
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Run tests
        run: npm test
        working-directory: ${{env.working-directory}}
        env:
          CI_CONTAINERS: true
          MIRROR_NODE_INT_DB: v2
          POSTGRES_DB: mirror_node_integration
          POSTGRES_PASSWORD: mirror_api_pass
          POSTGRES_USER: mirror_api
          TEST_S3_HOST: "127.0.0.1"

      - name: Upload rest test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: rest-test-2-results
          path: ${{env.working-directory}}/target/jest-junit/*
          retention-days: 7
