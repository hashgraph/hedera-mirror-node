name: Release Integration

on:
  push:
    branches:
      - "main"

permissions:
  contents: write

defaults:
  run:
    shell: bash

env:
  LC_ALL: C.UTF-8

jobs:
  publish:
    strategy:
      matrix:
        project:
          - graphql
          - grpc
          - importer
          - monitor
          - rest
          - rest-java
          - rest-monitor
          - rosetta
          - test
          - web3
    env:
      CONTEXT: hedera-mirror-${{ matrix.project }}
      IMAGE: gcr.io/mirrornode/hedera-mirror-${{ matrix.project }}
    runs-on: [self-hosted, Linux, large, ephemeral]
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@5c7944e73c4c2a096b17a9cb74d65b6c2bbafbde # v2.9.1
        with:
          egress-policy: audit

      - name: Checkout Code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Get version
        run: echo "VERSION=$(grep -oP 'version=\K.+' gradle.properties)" >> $GITHUB_ENV

      - name: Custom monitor path
        if: matrix.project == 'rest-monitor'
        run: echo "CONTEXT=hedera-mirror-rest/monitoring" >> $GITHUB_ENV

      - name: Install JDK
        uses: actions/setup-java@6a0805fcefea3d4657a47ac4c165951e33482018 # v4.2.2
        with:
          distribution: "temurin"
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@62cf5bd3e4211a0a0b51f2c6d6a37129d828611d # v2.1.5
        with:
          credentials_json: "${{ secrets.GCR_KEY }}"

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@f0990588f1e5b5af6827153b93673613abdc6ec7 # v2.1.1

      - name: Configure Docker
        run: gcloud auth configure-docker gcr.io,marketplace.gcr.io

      - name: Build
        if: matrix.project != 'rest' && matrix.project != 'rest-monitor' && matrix.project != 'rosetta'
        run: ./gradlew :${{matrix.project}}:build -x test

      - name: Setup QEMU
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1

      - name: Build and push images
        uses: docker/build-push-action@5cd11c3a4ced054e52742c5fd54dca954e0edd85 # v6.7.0
        with:
          build-args: VERSION=${{env.VERSION}}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: ${{env.CONTEXT}}
          platforms: linux/amd64, linux/arm64
          provenance: false
          push: true
          tags: "${{env.IMAGE}}:${{env.VERSION}},${{env.IMAGE}}:main,${{env.IMAGE}}:main-${{ github.sha }}"

  deploy:
    needs: publish
    runs-on: [self-hosted, Linux, large, ephemeral]
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@5c7944e73c4c2a096b17a9cb74d65b6c2bbafbde # v2.9.1
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          ref: deploy
          token: ${{ secrets.HEDERA_BOT_TOKEN }}

      - name: Import GPG Key
        id: gpg_importer
        uses: crazy-max/ghaction-import-gpg@01dd5d3ca463c7f10f7f4f7b4f177225ac661ee4 # v6.1.0
        with:
          git_commit_gpgsign: true
          git_tag_gpgsign: true
          git_user_signingkey: true
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Update integration deployment configuration
        run: 'sed -i "s/git.commit: .*/git.commit: ${GITHUB_SHA}/" clusters/preprod/integration/helmrelease.yaml'

      - name: Auto-Commit
        uses: stefanzweifel/git-auto-commit-action@8621497c8c39c72f3e2a999a26b4ca1b5058a842 # v5.0.1
        with:
          commit_author: ${{ steps.gpg_importer.outputs.name }} <${{ steps.gpg_importer.outputs.email }}>
          commit_message: Upgrade integration to main ${{ github.sha }}
          commit_options: "--no-verify --signoff"
          commit_user_email: ${{ steps.gpg_importer.outputs.email }}
          commit_user_name: ${{ steps.gpg_importer.outputs.name }}
