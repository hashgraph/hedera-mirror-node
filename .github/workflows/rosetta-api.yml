name: Rosetta API

on:
  pull_request:
    branches: [ master, release/** ]
  push:
    tags: [ v* ]

defaults:
  run:
    working-directory: ./hedera-mirror-rosetta

env:
  MAVEN_CLI_OPTS: --batch-mode --no-transfer-progress
  MODULE: hedera-mirror-rosetta

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v2

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: Maven verify
        run: ./mvnw ${MAVEN_CLI_OPTS} verify sonar:sonar -pl "${MODULE}" --also-make -Dsonar.login=$SONAR_TOKEN
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        working-directory: .

      - name: Upload coverage report
        run: bash <(curl -s https://codecov.io/bash)

      - name: Upload artifact
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.MODULE }}
          path: ./**/*.tgz
          if-no-files-found: error

  validate:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v2

      - name: Set tag
        if: startsWith(github.ref, 'refs/tags/v')
        run: echo "branch=${{ git.ref }}" >> $GITHUB_ENV

      - name: Set branch
        if: ${{ github.head_ref != '' }}
        run: echo "branch=${{ git.head_ref }}" >> $GITHUB_ENV

      - name: Build Mirror Node All-in-One
        run: docker build --tag="${MODULE}" --build-arg GIT_BRANCH="${{ env.branch }}" build/

      - name: Run Mirror Node
        run: docker run -d -p 5700:5700 "${MODULE}"

      - name: Wait for Mirror Node to start syncing
        run: ./scripts/wait-for-mirror-node.sh

      - name: Run CLI Validation
        run: ./scripts/validation/run-validation.sh

  gosec:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        name: Setup GO Env
        with:
          go-version: '1.14'

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: Install Gosec
        run: go get github.com/securego/gosec/v2/cmd/gosec

      - name: Run Gosec Security Scanner
        run: gosec ./...
