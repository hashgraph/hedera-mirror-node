name: Rosetta API

on:
  pull_request:
    branches: [ master, release/** ]
  push:
    tags: [ v* ]

defaults:
  run:
    working-directory: ./hedera-mirror-rosetta

env:
  MAVEN_CLI_OPTS: --batch-mode --no-transfer-progress
  MODULE: hedera-mirror-rosetta

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v2

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: Maven verify
        run: ./mvnw ${MAVEN_CLI_OPTS} verify -pl "${MODULE}" --also-make
        working-directory: .
        env:
          GOPATH: ~/go

      - name: Upload coverage report
        run: bash <(curl -s https://codecov.io/bash)

      - name: Upload artifact
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.MODULE }}
          path: ./**/*.tgz
          if-no-files-found: error

  image:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Mirror Node All-in-One and Push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: hedera-mirror-rosetta/build/Dockerfile
          tags: ${{ env.MODULE }}:latest
          outputs: type=docker,dest=/tmp/test-image.tar

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: test-image
          path: /tmp/test-image.tar

  validate_data:
    runs-on: ubuntu-latest
    needs: image
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: test-image
          path: /tmp

      - name: Load Docker image
        run: |
          docker load --input /tmp/test-image.tar
          docker image ls -a

      - name: Run Mirror Node
        run: docker run -d -p 5700:5700 "${MODULE}:latest"

      - name: Wait for Mirror Node to start syncing
        run: ./scripts/wait-for-mirror-node.sh

      - name: Run CLI Validation
        run: ./scripts/validation/run-validation.sh

  validate_construction:
    runs-on: ubuntu-latest
    needs: image
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: test-image
          path: /tmp

      - name: Load Docker image
        run: |
          docker load --input /tmp/test-image.tar
          docker image ls -a

      - name: Importer Configuration
        run: echo "${{ secrets.ROSETTA_IMPORTER_CONFIG }}" | base64 -d > /tmp/application.yml

      - name: Construciton Test Prefunded Accounts
        run: |
          echo "${{ secrets.ROSETTA_PREFUNDED_ACCOUNTS }}" | base64 -d > /tmp/accounts.json
          cd ./scripts/validation/testnet/
          jq --slurpfile accounts /tmp/accounts.json ".construction.prefunded_accounts=$accounts" \
            validate-construction.json > /tmp/validate-construction.json
          mv /tmp/validate-construction.json validate-construction.json

      - name: Set Importer StartDate
        run: |
          startdate=$(date --date='15 minutes ago' -Iseconds -u)
          startdate=${startdate%+*}Z
          echo "STARTDATE=$startdate" >> $GITHUB_ENV
          echo "Set importer startDate to $startdate"

      - name: Run Mirror Node
        run: |
          docker run -d -e HEDERA_MIRROR_ROSETTA_NETWORK=testnet \
            -e HEDERA_MIRROR_IMPORTER_STARTDATE=$STARTDATE \
            -v /tmp/application.yml:/var/importer/application.yml \
            -p 5700:5700 "${MODULE}:latest"

      - name: Wait for Mirror Node to start syncing
        run: ./scripts/wait-for-mirror-node.sh

      - name: Run CLI Validation
        run: ./scripts/validation/run-validation.sh testnet

  gosec:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    steps:
      - uses: actions/checkout@v2
        with:
          path: tmp

      - name: Copy hedera-mirror-rosetta to workspace root
        working-directory: .
        run: |
          cp -r tmp/hedera-mirror-rosetta/* .
          rm -fr tmp

      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          args: ./...

  cleanup:
    runs-on: ubuntu-latest
    needs: [validate_data, validate_construction]
    if: always()
    steps:
      - uses: geekyeggo/delete-artifact@v1
        with:
          name: test-image
          failOnError: false
