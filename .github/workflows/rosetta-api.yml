name: Rosetta API

on:
  pull_request:
    branches: [ master, release/** ]
  push:
    tags: [ v* ]

defaults:
  run:
    working-directory: ./hedera-mirror-rosetta

env:
  MAVEN_CLI_OPTS: --batch-mode --no-transfer-progress
  MODULE: hedera-mirror-rosetta

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v2

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: Maven verify
        run: ./mvnw ${MAVEN_CLI_OPTS} verify -pl "${MODULE}" --also-make
        working-directory: .
        env:
          GOPATH: ~/go

      - name: Upload coverage report
        if: always()
        run: bash <(curl -s https://codecov.io/bash)

      - name: Upload artifact
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.MODULE }}
          path: ./**/*.tgz
          if-no-files-found: error

  validate:
    if: github.event.pull_request.head.repo.full_name == github.repository && !contains(github.head_ref, 'dependabot/')
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build Mirror Node All-in-One
        run: docker build --tag="${MODULE}" -f build/Dockerfile ..

      - name: Importer Configuration
        run: echo "${{ secrets.ROSETTA_IMPORTER_CONFIG }}" | base64 -d > /tmp/application.yml

      - name: Construction Test Prefunded Accounts
        run: |
          echo "${{ secrets.ROSETTA_PREFUNDED_ACCOUNTS }}" | base64 -d > /tmp/accounts.json
          cd ./scripts/validation/testnet/
          jq --slurpfile accounts /tmp/accounts.json '.construction.prefunded_accounts=$accounts[0]' \
            validate-construction.json > /tmp/validate-construction.json
          mv /tmp/validate-construction.json validate-construction.json

      - name: Set Importer StartDate
        run: |
          startdate=$(date --date='15 minutes ago' -Iseconds -u)
          startdate=${startdate%+*}Z
          echo "STARTDATE=$startdate" >> $GITHUB_ENV
          echo "Set importer startDate to $startdate"

      - name: Run Mirror Node
        run: |
          CONTAINER_ID=$(docker run -d -e HEDERA_MIRROR_IMPORTER_STARTDATE=$STARTDATE \
            -e NETWORK=testnet \
            -v /tmp/application.yml:/var/importer/application.yml \
            -p 5432:5432 -p 5700:5700 "${MODULE}")

          echo "CONTAINER_ID=$CONTAINER_ID" >> $GITHUB_ENV

      - name: Wait for Mirror Node to start syncing
        run: ./scripts/wait-for-mirror-node.sh

      - name: Get Genesis Account Balances
        run: ./scripts/validation/get-genesis-balance.sh testnet

      - name: Run Rosetta CLI Validation
        working-directory: ./hedera-mirror-rosetta/scripts/validation
        run: |
          echo "Installing Rosetta CLI"
          curl -sSfL https://raw.githubusercontent.com/coinbase/rosetta-cli/master/scripts/install.sh | sh -s -- -b .

          ./run-validation.sh testnet construction > /tmp/construction-validation.log 2>&1 &
          pid=$!

          ./run-validation.sh testnet data && code=0 || code=$?
          [[ $code -eq 0 ]] && { wait $pid || code=$?; }
          cat /tmp/construction-validation.log
          exit $code

      - name: Show Container Log
        if: ${{ failure() && env.CONTAINER_ID != '' }}
        run: docker logs $CONTAINER_ID

  gosec:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    steps:
      - uses: actions/checkout@v2
        with:
          path: tmp

      - name: Copy hedera-mirror-rosetta to workspace root
        working-directory: .
        run: |
          cp -r tmp/hedera-mirror-rosetta/* .
          rm -fr tmp

      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          args: ./...
