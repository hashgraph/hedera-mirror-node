name: Release Automation

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version (semver)'
        required: true

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    env:
      RELEASE_NOTES_FILENAME: release_notes
    outputs:
      create_pr: ${{ env.CREATE_PR }}
      next_version_snapshot: ${{ env.NEXT_VERSION_SNAPSHOT }}
      pr_title: ${{ env.PR_TITLE }}
      release_branch: ${{ env.RELEASE_BRANCH }}

    steps:
      - name: Parse Version
        id: version_parser
        uses: terradatum/semver-action@v1
        with:
          bump: preminor
          version: ${{ github.event.inputs.version }}

      - name: Retrieve the Milestone
        id: milestone
        if: ${{ steps.version_parser.outputs.pre-release == '' }}
        uses: julbme/gh-action-manage-milestone@v1
        with:
          title: ${{ steps.version_parser.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Release Environment Variables
        run: |
          NEXT_VERSION_SNAPSHOT=${{ format('{0}.{1}.0-SNAPSHOT', steps.version_parser.outputs.major, steps.version_parser.outputs.next-minor) }}
          RELEASE_BRANCH="release/${{ steps.version_parser.outputs.major }}.${{ steps.version_parser.outputs.minor }}"
          RELEASE_TAG=v${{ steps.version_parser.outputs.version }}

          cat >> $GITHUB_ENV <<EOF
          NEXT_VERSION_SNAPSHOT=$NEXT_VERSION_SNAPSHOT
          RELEASE_BRANCH=$RELEASE_BRANCH
          RELEASE_TAG=$RELEASE_TAG
          EOF

      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: main
          token: ${{ secrets.HEDERA_BOT_TOKEN }}

      - name: Import GPG Key
        id: gpg_importer
        uses: crazy-max/ghaction-import-gpg@v5.2.0
        with:
          git_commit_gpgsign: true
          git_tag_gpgsign: true
          git_user_signingkey: true
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Install JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Create and Switch to Release Branch
        run: |
          if ! git ls-remote --exit-code --heads --quiet origin refs/heads/${RELEASE_BRANCH}; then
            git checkout -b ${RELEASE_BRANCH}
            git push -u origin ${RELEASE_BRANCH}

            # create a PR to bump main branch to the next snapshot version
            echo "CREATE_PR=true" >> $GITHUB_ENV
            echo "PR_TITLE=Bump versions for v$NEXT_VERSION_SNAPSHOT" >> $GITHUB_ENV
          else
            git checkout ${RELEASE_BRANCH}
          fi

      - name: Gradle Release
        uses: gradle/gradle-build-action@v2
        with:
          arguments: release -Pversion=${{ steps.version_parser.outputs.version }}

      - name: Create Release Notes
        if: ${{ steps.milestone.outputs.number != '' }}
        uses: xin-hedera/release-notes-generator-action@v3.1.5-rc1
        env:
          FILENAME: ${{ env.RELEASE_NOTES_FILENAME }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MILESTONE_NUMBER: ${{ steps.milestone.outputs.number }}

      - name: Commit and Tag
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_author: ${{ steps.gpg_importer.outputs.name }} <${{ steps.gpg_importer.outputs.email }}>
          commit_message: Bump versions for ${{ env.RELEASE_TAG }}
          commit_options: '--no-verify --signoff'
          commit_user_name: ${{ steps.gpg_importer.outputs.name }}
          commit_user_email: ${{ steps.gpg_importer.outputs.email }}
          tagging_message: ${{ env.RELEASE_TAG }}

      - name: Create Github Release
        uses: ncipollo/release-action@v1
        with:
          bodyFile: ${{ env.RELEASE_NOTES_FILENAME }}.md
          commit: ${{ env.RELEASE_BRANCH }}
          draft: true
          name: ${{ env.RELEASE_TAG }}
          omitBody: ${{ steps.milestone.outputs.number == '' }}
          prerelease: ${{ steps.version_parser.outputs.pre-release != '' }}
          tag: ${{ env.RELEASE_TAG }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Close the Milestone
        if: ${{ steps.milestone.outputs.number != '' }}
        uses: julbme/gh-action-manage-milestone@v1
        with:
          title: ${{ steps.version_parser.outputs.version }}
          state: closed
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  create_pr:
    name: Create PR
    runs-on: ubuntu-latest
    needs: release
    if: ${{ needs.release.outputs.create_pr == 'true' }}
    env:
      NEXT_VERSION_SNAPSHOT: ${{ needs.release.outputs.next_version_snapshot }}
      RELEASE_BRANCH: ${{ needs.release.outputs.release_branch }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Import GPG Key
        id: gpg_importer
        uses: crazy-max/ghaction-import-gpg@v5.2.0
        with:
          git_commit_gpgsign: true
          git_tag_gpgsign: true
          git_user_signingkey: true
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Install JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Reset main to release branch
        run: |
          git fetch origin $RELEASE_BRANCH:$RELEASE_BRANCH
          git reset --hard $RELEASE_BRANCH

      - name: Gradle Release for Next Minor Snapshot
        uses: gradle/gradle-build-action@v2
        with:
          arguments: release -Pversion=${{ env.NEXT_VERSION_SNAPSHOT }}

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          body: ''
          branch: create-pull-request/${{ env.RELEASE_BRANCH }}
          commit-message: Bump versions for v${{ env.NEXT_VERSION_SNAPSHOT }}
          committer: ${{ steps.gpg_importer.outputs.name }} <${{ steps.gpg_importer.outputs.email }}>
          author: ${{ steps.gpg_importer.outputs.name }} <${{ steps.gpg_importer.outputs.email }}>
          delete-branch: true
          signoff: true
          title: ${{ needs.release.outputs.pr_title }}
          token: ${{ secrets.HEDERA_BOT_TOKEN }}
