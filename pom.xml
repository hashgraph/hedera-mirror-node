<?xml version="1.0" encoding="UTF-8" ?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <groupId>com.hedera</groupId>
    <artifactId>hedera-mirror-node</artifactId>
    <version>0.20.0-alpha1</version>
    <description>Hedera Mirror Node mirrors data from Hedera nodes and serves it via an API</description>
    <inceptionYear>2019</inceptionYear>
    <modelVersion>4.0.0</modelVersion>
    <name>Hedera Mirror Node</name>
    <packaging>pom</packaging>
    <url>https://github.com/hashgraph/hedera-mirror-node</url>

    <ciManagement>
        <system>CircleCI</system>
        <url>https://circleci.com/gh/hashgraph/hedera-mirror-node</url>
    </ciManagement>

    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/hashgraph/hedera-mirror-node/issues</url>
    </issueManagement>

    <licenses>
        <license>
            <distribution>repo</distribution>
            <name>Apache License 2.0</name>
            <url>https://github.com/hashgraph/hedera-mirror-node/blob/master/LICENSE</url>
        </license>
    </licenses>

    <modules>
        <module>hedera-mirror-coverage</module>
        <module>hedera-mirror-datagenerator</module>
        <module>hedera-mirror-grpc</module>
        <module>hedera-mirror-importer</module>
        <module>hedera-mirror-protobuf</module>
        <module>hedera-mirror-rest</module>
        <module>hedera-mirror-test</module>
    </modules>

    <organization>
        <name>Hedera Hashgraph, LLC</name>
        <url>https://hedera.com</url>
    </organization>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.3.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <disruptor.version>3.4.2</disruptor.version> <!-- Used for asynchronous logging -->
        <docker-maven-plugin.version>0.34.1</docker-maven-plugin.version>
        <docker.push.repository>gcr.io/mirrornode</docker.push.repository>
        <docker.resources>${project.build.directory}/container</docker.resources>
        <docker.tag.version>${project.version}</docker.tag.version>
        <grpc.version>1.31.1</grpc.version>
        <hedera-protobuf.version>0.9.0-alpha5</hedera-protobuf.version>
        <hedera-sdk.version>1.2.2</hedera-sdk.version>
        <jacoco.version>0.8.6</jacoco.version>
        <java.version>11</java.version>
        <javax.version>1</javax.version>
        <jib.version>2.5.2</jib.version>
        <jmeter.version>5.3</jmeter.version>
        <micrometer-jvm-extras.version>0.2.0</micrometer-jvm-extras.version>
        <msgpack.version>0.8.20</msgpack.version>
        <protobuf.version>3.13.0</protobuf.version>
        <release.version>${project.version}</release.version> <!-- Used to replace release versions in all files -->
        <release.chartVersion>0.6.0-rc1</release.chartVersion>
        <embedded.testcontainers.version>1.82</embedded.testcontainers.version>
    </properties>

    <scm>
        <connection>https://github.com/hashgraph/hedera-mirror-node.git</connection>
        <tag>master</tag>
        <url>https://github.com/hashgraph/hedera-mirror-node/tree/master</url>
    </scm>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>Hoxton.SR8</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-gcp-dependencies</artifactId>
                <version>1.2.5.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <!-- Download library source jars and package in container image for GCP Marketplace compliance -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <executions>
                        <execution>
                            <phase>verify</phase>
                            <goals>
                                <goal>copy-dependencies</goal>
                            </goals>
                            <configuration>
                                <classifier>sources</classifier>
                                <includeScope>runtime</includeScope>
                                <outputDirectory>${docker.resources}/third_party/sources</outputDirectory>
                                <prependGroupId>true</prependGroupId>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!-- antlr 2.x (Hibernate dependency) is so old it doesn't have sources in Maven Central -->
                <plugin>
                    <groupId>com.googlecode.maven-download-plugin</groupId>
                    <artifactId>download-maven-plugin</artifactId>
                    <version>1.6.0</version>
                    <executions>
                        <execution>
                            <id>download-antlr-source</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>wget</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${docker.resources}/third_party/sources</outputDirectory>
                                <url>https://www.antlr2.org/download/antlr-2.7.7.tar.gz</url>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.0.0-M5</version>
                    <configuration>
                        <!-- Jacoco prepare-agent builds some command-line params without -->
                        <!-- which jacoco will not instrument. Hence it is important to add -->
                        <!-- those command-line params here (${argLine} holds those params) -->
                        <argLine>${argLine} -Xms512m -Xmx1024m</argLine>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>report</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>com.google.cloud.tools</groupId>
                    <artifactId>jib-maven-plugin</artifactId>
                    <version>${jib.version}</version>
                    <configuration>
                        <extraDirectories>
                            <paths>
                                <path>${docker.resources}</path>
                            </paths>
                        </extraDirectories>
                        <to>
                            <image>${docker.push.repository}/${project.artifactId}:${docker.tag.version}</image>
                        </to>
                        <container>
                            <creationTime>USE_CURRENT_TIMESTAMP</creationTime>
                        </container>
                    </configuration>
                    <executions>
                        <execution>
                            <id>dockerBuild</id>
                            <phase>install</phase>
                            <goals>
                                <goal>dockerBuild</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>dockerPush</id>
                            <phase>deploy</phase>
                            <goals>
                                <goal>build</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <configuration>
                        <skip>true</skip>
                    </configuration>
                </plugin>
                <plugin>
                    <!-- To generate license report: ./mvnw license:aggregate-third-party-report -->
                    <!-- To update license headers: ./mvnw license:update-file-header -N -->
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>2.0.0</version>
                    <configuration>
                        <canUpdateCopyright>true</canUpdateCopyright>
                        <excludes>
                            <exclude>**/node_modules/**/*</exclude>
                            <exclude>**/target/**/*</exclude>
                            <exclude>.mvn/**/*</exclude>
                        </excludes>
                        <includes>
                            <include>**/*.js</include>
                            <include>**/*.java</include>
                            <include>**/*.proto</include>
                        </includes>
                        <licenseMerges>
                            <licenseMerge>
                                <![CDATA[Apache License, Version 2.0|Apache 2|Apache License, version 2.0|The Apache License, Version 2.0|The Apache Software License, Version 2.0|Apache-2.0|Apache License 2.0|Apache 2.0]]>
                            </licenseMerge>
                            <licenseMerge><![CDATA[BSD License|BSD]]></licenseMerge>
                            <licenseMerge>
                                <![CDATA[BSD 3-Clause License|3-Clause BSD License|BSD License 2.0|BSD New license|BSD 3-clause New License|BSD 3-clause]]>
                            </licenseMerge>
                            <licenseMerge>CC0|Public Domain, per Creative Commons CC0</licenseMerge>
                            <licenseMerge>
                                <![CDATA[CDDL + GPLv2 with classpath exception|CDDL/GPLv2+CE|CDDL 1.1 with GPL2 w/ CPE|CDDL 1.1 + GPL2 w/ CPE]]>
                            </licenseMerge>
                            <licenseMerge><![CDATA[Eclipse Distribution License - v 1.0|EDL 1.0]]></licenseMerge>
                            <licenseMerge>
                                <![CDATA[GNU Lesser General Public License (LGPL) version 2.1|LGPLv2.1|GNU Library General Public License v2.1 or later|]]>
                            </licenseMerge>
                            <licenseMerge><![CDATA[MIT License|MIT|MIT license|The MIT License]]></licenseMerge>
                        </licenseMerges>
                        <licenseName>apache_v2</licenseName>
                        <!-- These contain unprintable characters to suppress showing the delimiters -->
                        <processEndTag>‍</processEndTag>
                        <processStartTag>‌</processStartTag>
                        <roots>
                            <root>.</root>
                        </roots>
                        <sectionDelimiter>​</sectionDelimiter>
                    </configuration>
                    <executions>
                        <execution>
                            <id>download-licenses-for-container</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>download-licenses</goal>
                            </goals>
                            <configuration>
                                <licensesOutputDirectory>${docker.resources}/third_party/licenses
                                </licensesOutputDirectory>
                                <licenseUrlReplacements>
                                    <licenseUrlReplacement>
                                        <regexp>\Qhttps://glassfish.dev.java.net/nonav/public/CDDL+GPL.html\E</regexp>
                                        <replacement>https://oss.oracle.com/licenses/CDDL+GPL-1.1</replacement>
                                    </licenseUrlReplacement>
                                </licenseUrlReplacements>
                                <organizeLicensesByDependencies>true</organizeLicensesByDependencies>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>${docker-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>dockerBuild</id>
                            <goals>
                                <goal>build</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>dockerPush</id>
                            <goals>
                                <goal>push</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <images>
                            <image>
                                <external>
                                    <type>properties</type>
                                    <prefix>docker</prefix>
                                    <mode>override</mode>
                                </external>
                                <build>
                                    <contextDir>${project.basedir}</contextDir>
                                    <assembly>
                                        <exportTargetDir>false</exportTargetDir>
                                    </assembly>
                                </build>
                                <name>${docker.push.repository}/${project.artifactId}:${docker.tag.version}</name>
                            </image>
                        </images>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <inherited>false</inherited>
                <configuration>
                    <failOnNoGitDirectory>false</failOnNoGitDirectory>
                    <injectAllReactorProjects>true</injectAllReactorProjects>
                    <runOnlyOnce>true</runOnlyOnce>
                    <skipPoms>false</skipPoms>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>release</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.google.code.maven-replacer-plugin</groupId>
                        <artifactId>replacer</artifactId>
                        <version>1.5.3</version>
                        <configuration>
                            <basedir>${project.basedir}</basedir>
                            <includes>
                                <include>charts/**/Chart.yaml</include>
                                <include>docker-compose.yml</include>
                                <include>hedera-mirror-rest/package*.json</include>
                                <include>hedera-mirror-rest/monitoring/monitor_apis/package*.json</include>
                                <include>*/pom.xml</include>
                                <include>pom.xml</include>
                                <include>hedera-mirror-test/src/test/resources/k8s/*.yml</include>
                            </includes>
                            <replacements>
                                <replacement>
                                    <token>
                                        <![CDATA[(?<="hedera-mirror-(rest|monitor)",\s{3}"version": ")[^"]+]]></token>
                                    <value>${release.version}</value>
                                </replacement>
                                <replacement>
                                    <token>
                                        <![CDATA[(?<=hedera-mirror-node</artifactId>(\s{9}|\s{5})<version>)[^<]+]]></token>
                                    <value>${release.version}</value>
                                </replacement>
                                <replacement>
                                    <token><![CDATA[(?<=appVersion: )[0-9a-z.-]+]]></token>
                                    <value>${release.version}</value>
                                </replacement>
                                <replacement>
                                    <token><![CDATA[(?<=version: )[0-9a-z.-]+]]></token>
                                    <value>${release.chartVersion}</value>
                                </replacement>
                                <replacement>
                                    <token>
                                        <![CDATA[(?<=gcr.io/mirrornode/hedera-mirror-(grpc|importer|rest|test):)[0-9a-zA-Z.-]+]]></token>
                                    <value>${release.version}</value>
                                </replacement>
                            </replacements>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>replace</goal>
                                </goals>
                                <inherited>false</inherited>
                                <phase>prepare-package</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
