<?xml version="1.0" encoding="UTF-8" ?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.8.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.hedera</groupId>
	<artifactId>mirror-node</artifactId>
	<version>0.4.0-SNAPSHOT</version>
	<name>Hedera Mirror Node</name>
	<description>Hedera Mirror Node mirrors data from Hedera nodes and serves it via an API</description>
	<ciManagement>
		<system>CircleCI</system>
		<url>https://circleci.com/gh/hashgraph/hedera-mirror-node</url>
	</ciManagement>
	<inceptionYear>2019</inceptionYear>
	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/hashgraph/hedera-mirror-node/issues</url>
	</issueManagement>
	<licenses>
		<license>
			<name>Apache License 2.0</name>
			<url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<organization>
		<name>Hedera Hashgraph, LLC</name>
		<url>https://hedera.com</url>
	</organization>
	<packaging>jar</packaging>
	<scm>
		<connection>https://github.com/hashgraph/hedera-mirror-node.git</connection>
		<tag>master</tag>
		<url>https://github.com/hashgraph/hedera-mirror-node/tree/master</url>
	</scm>
	<url>https://github.com/hashgraph/hedera-mirror-node</url>
	<properties>
		<commons-io.version>2.6</commons-io.version>
		<disruptor.version>3.4.2</disruptor.version>
		<hedera-protobuf.version>0.3.5</hedera-protobuf.version>
		<hedera-sdk.version>0.6.1</hedera-sdk.version>
		<jacoco.version>0.8.4</jacoco.version>
		<java.version>11</java.version>
		<jib.version>1.5.1</jib.version>
		<junit-jupiter.version>5.5.2</junit-jupiter.version>
		<start-class>com.hedera.MirrorNodeApplication</start-class>
		<testcontainers.version>1.12.1</testcontainers.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>
		<dependency>
			<groupId>com.lmax</groupId>
			<artifactId>disruptor</artifactId>
			<version>${disruptor.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.github.ben-manes.caffeine</groupId>
			<artifactId>caffeine</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.hedera.hashgraph</groupId>
			<artifactId>hedera-protobuf-java-api</artifactId>
			<version>${hedera-protobuf.version}</version>
		</dependency>
		<dependency>
			<groupId>com.hedera.hashgraph</groupId>
			<artifactId>sdk</artifactId>
			<version>${hedera-sdk.version}</version>
			<exclusions>
				<exclusion>
					<groupId>io.grpc</groupId>
					<artifactId>grpc-netty-shaded</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io.version}</version>
		</dependency>
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>s3</artifactId>
        </dependency>
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>netty-nio-client</artifactId>
        </dependency>
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator-annotation-processor</artifactId>
		</dependency>
		<!-- Test -->
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>postgresql</artifactId>
			<version>${testcontainers.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.findify</groupId>
			<artifactId>s3mock_2.12</artifactId>
			<version>0.2.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>bom</artifactId>
                <version>2.10.6</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>2.0.0</version>
				<configuration>
					<canUpdateCopyright>true</canUpdateCopyright>
					<includes>
						<include>**/*.java</include>
						<include>rest-api/*.js</include>
						<include>rest-api/__tests__/*.js</include>
					</includes>
					<licenseName>apache_v2</licenseName>
					<roots>
						<root>src/main/java</root>
						<root>src/test/java</root>
						<root>rest-api</root>
					</roots>
					<!-- These contain unprintable characters to suppress showing the delimiters -->
					<processEndTag>‍</processEndTag>
					<processStartTag>‌</processStartTag>
					<sectionDelimiter>​</sectionDelimiter>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>target/jacoco.exec</dataFile>
							<outputDirectory>target/site/jacoco</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>com.google.cloud.tools</groupId>
				<artifactId>jib-maven-plugin</artifactId>
				<version>${jib.version}</version>
				<configuration>
					<to>
						<image>hederahashgraph/mirror-node</image>
						<tags>
							<tag>${project.version}</tag>
						</tags>
					</to>
				</configuration>
				<executions>
					<execution>
						<phase>install</phase>
						<goals>
							<goal>dockerBuild</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<configuration>
					<executable>docker</executable>
					<arguments>
						<argument>build</argument>
						<argument>-t</argument>
						<argument>hederahashgraph/mirror-node-api</argument>
						<argument>-t</argument>
						<argument>hederahashgraph/mirror-node-api:${project.version}</argument>
						<argument>./rest-api</argument>
					</arguments>
				</configuration>
				<executions>
					<execution>
						<phase>install</phase>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
