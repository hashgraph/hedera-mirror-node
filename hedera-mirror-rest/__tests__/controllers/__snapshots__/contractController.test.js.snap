// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`checkTimestampsForTopics topic0 param 1`] = `"Cannot search topics without timestamp range: Not equals operator not supported for timestamp param"`;

exports[`checkTimestampsForTopics topic0 param no timestamps 1`] = `"Cannot search topics without timestamp range: No timestamp range or eq operator provided"`;

exports[`checkTimestampsForTopics topic1 param one timestamp gt 1`] = `"Cannot search topics without timestamp range: Timestamp range must have gt (or gte) and lt (or lte)"`;

exports[`checkTimestampsForTopics topic2 param one timestamp lt 1`] = `"Cannot search topics without timestamp range: Timestamp range must have gt (or gte) and lt (or lte)"`;

exports[`extractContractLogsByIdQuery error - multiple index 1`] = `"Multiple params not allowed for index"`;

exports[`extractContractLogsByIdQuery error - timestamp not equal operator 1`] = `"Not equals operator not supported for timestamp param"`;

exports[`validateContractIdAndConsensusTimestampParam invalid case - {"contractId":"1","consensusTimestamp":"y"} 1`] = `
Array [
  "Invalid parameter: timestamp",
]
`;

exports[`validateContractIdAndConsensusTimestampParam invalid case - {"contractId":"x","consensusTimestamp":"1"} 1`] = `
Array [
  "Invalid parameter: contractid",
]
`;

exports[`validateContractIdAndConsensusTimestampParam invalid case - {"contractId":"x","consensusTimestamp":"y"} 1`] = `
Array [
  "Invalid parameter: contractid",
  "Invalid parameter: timestamp",
]
`;

exports[`validateContractIdParam invalid contract ID - -1 1`] = `
Array [
  "Invalid parameter: contractid",
]
`;

exports[`validateContractIdParam invalid contract ID - 0.1.2.3 1`] = `
Array [
  "Invalid parameter: contractid",
]
`;

exports[`validateContractIdParam invalid contract ID - x 1`] = `
Array [
  "Invalid parameter: contractid",
]
`;
