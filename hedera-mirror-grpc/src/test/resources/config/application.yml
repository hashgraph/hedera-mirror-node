grpc:
  client:
    GLOBAL:
      negotiationType: plaintext
    local:
      address: in-process:local
  server:
    enableKeepAlive: false
    inProcessName: local
hedera:
  mirror:
    grpc:
      db:
        # https://github.com/testcontainers/testcontainers-spring-boot#embedded-postgresql
        host: ${embedded.postgresql.host}
        port: ${embedded.postgresql.port}
        name: ${embedded.postgresql.schema}
        username: ${embedded.postgresql.user}
        password: ${embedded.postgresql.password}
      endTimeInterval: 100ms
      listener:
        enabled: false # Disabled except in tests that use it since it polls in background repeatedly every 50ms
        interval: 50ms
        type: SHARED_POLL # We manually pg_notify on importer so can't use NOTIFY as default
      retriever:
        pollingFrequency: 50ms
spring:
  data:
    redis:
      host: ${embedded.redis.host}
      password: ${embedded.redis.password}
      port: ${embedded.redis.port}
      username: "" # Redis 5 does not support authentication with a username and will fail if provided
  datasource:
    name: ${hedera.mirror.grpc.db.name}
    password: ${hedera.mirror.grpc.db.password}
    url: jdbc:postgresql://${hedera.mirror.grpc.db.host}:${hedera.mirror.grpc.db.port}/${hedera.mirror.grpc.db.name}?sslmode=${hedera.mirror.grpc.db.sslMode}
    username: ${hedera.mirror.grpc.db.username}
  flyway:
    baselineOnMigrate: true
    connectRetries: 10
    ignoreMigrationPatterns: ["*:missing", "*:ignored"]
    placeholders:
      api-password: mirror_api_pass
      api-user: mirror_api
      autovacuumFreezeMaxAgeInsertOnly: 100000
      autovacuumVacuumInsertThresholdCryptoTransfer: 18000000
      autovacuumVacuumInsertThresholdTokenTransfer: 2000
      autovacuumVacuumInsertThresholdTransaction: 6000000
      chunkIdInterval: 10000
      chunkTimeInterval: 604800000000000
      compressionAge: 9223372036854775807 # use long max to avoid compression during test
      cronSchedule: "'@daily'"
      db-name: ${hedera.mirror.grpc.db.name}
      db-user: ${hedera.mirror.grpc.db.username}
      partitionIdInterval: "'1000000000'"
      partitionStartDate: "'0 days'"
      partitionTimeInterval: "'1 year'"
      schema: public
      shardCount: 2
      topicRunningHashV2AddedTimestamp: 0
  test:
    database:
      replace: NONE
