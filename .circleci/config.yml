version: 2

references:
  workspace_root: &workspace_root /tmp/workspace
  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root
  persist_artifacts: &persist_artifacts
    persist_to_workspace:
      root: *workspace_root
      paths:
        - artifacts
  pom_checksum: &pom_checksum
    run:
      name: Calculate checksum of all pom.xml
      command: find . -type f -name "pom.xml" | sort -u | xargs sha512sum > pom.xml.checksum
  restore_maven_cache: &restore_maven_cache
    restore_cache:
      keys:
        #  Perms on ~/.m2 differ by executor (docker/machine), so {{ arch }} is needed.
        - maven-v2-{{ arch }}-{{ .Branch }}-{{ checksum "pom.xml.checksum" }}
        - maven-v2-{{ arch }}-{{ .Branch }}
        - maven-v2-{{ arch }}-
  save_maven_cache: &save_maven_cache
    save_cache:
      key: maven-v2-{{ arch }}-{{ .Branch }}-{{ checksum "pom.xml.checksum" }}
      paths:
        - ~/.m2
  db_docker: &db_docker
    docker:
      - image: adoptopenjdk:11-jdk-hotspot
      - image: postgres:9.6-alpine
        environment:
          POSTGRES_DB: mirror_node_test
          POSTGRES_PASSWORD: mirror_node_pass
          POSTGRES_USER: mirror_node

workflows:
  version: 2
  main:
    jobs:
      - build_maven:
          filters: # required since `release_artifacts` has tag filters AND requires `this`
            branches:
              only: /.*/
            tags:
              only: /.*/
      - build_rest:
          filters: # required since `release_artifacts` has tag filters AND requires `this`
            branches:
              only: /.*/
            tags:
              only: /.*/
      - release_artifacts:
          requires:
            - build_maven
            - build_rest
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - publish_images:
          requires:
            - build_maven
            - build_rest
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^.*/
      - perf_maven:
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/

jobs:
  build_maven:
    environment:
      MAVEN_CLI_OPTS: --batch-mode --no-transfer-progress --show-version -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
    <<: *db_docker
    steps:
      - checkout
      - *pom_checksum
      - *restore_maven_cache
      - run:
          name: Resolve dependencies
          # See https://issues.apache.org/jira/browse/MDEP-516 for why we don't use maven-dependency-plugin
          command: ./mvnw ${MAVEN_CLI_OPTS} de.qaware.maven:go-offline-maven-plugin:resolve-dependencies
      - *save_maven_cache
      - run:
          name: Running maven (validate, compile, test, package)
          command: ./mvnw ${MAVEN_CLI_OPTS} package
      - store_test_results:
          path: hedera-mirror-importer/target/surefire-reports
      - run:
          name: Upload Code Coverage
          command: bash <(curl -s https://codecov.io/bash)
      - run:
          name: Collecting assets for hedera-mirror-grpc
          command: |
            set -ex
            VERSION_TAG=${CIRCLE_TAG/*\//}
            NAME=hedera-mirror-grpc-${VERSION_TAG:-b$CIRCLE_BUILD_NUM}
            WORKSPACE=/tmp/workspace
            mkdir -p ${WORKSPACE}/${NAME}
            mv hedera-mirror-grpc/target/hedera-mirror-grpc-*-exec.jar ${WORKSPACE}/${NAME}/${NAME}.jar
            mv hedera-mirror-grpc/scripts ${WORKSPACE}/${NAME}
            mkdir -p ${WORKSPACE}/artifacts
            tar -czf ${WORKSPACE}/artifacts/${NAME}.tgz -C ${WORKSPACE} ${NAME}
      - run:
          name: Collecting assets for hedera-mirror-importer
          command: |
            set -ex
            VERSION_TAG=${CIRCLE_TAG/*\//}
            NAME=hedera-mirror-importer-${VERSION_TAG:-b$CIRCLE_BUILD_NUM}
            WORKSPACE=/tmp/workspace
            mkdir -p ${WORKSPACE}/${NAME}
            mv hedera-mirror-importer/target/hedera-mirror-importer-*-exec.jar ${WORKSPACE}/${NAME}/${NAME}.jar
            mv hedera-mirror-importer/scripts ${WORKSPACE}/${NAME}
            mkdir -p ${WORKSPACE}/artifacts
            tar -czf ${WORKSPACE}/artifacts/${NAME}.tgz -C ${WORKSPACE} ${NAME}
      - *persist_artifacts

  perf_maven:
    environment:
      MAVEN_CLI_OPTS: --batch-mode --no-transfer-progress --show-version -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
    <<: *db_docker
    steps:
      - checkout
      - *pom_checksum
      - *restore_maven_cache
      - run:
          name: Running maven (integration)
          command: ./mvnw ${MAVEN_CLI_OPTS} integration-test --projects hedera-mirror-importer/ -P performance-test
      - *save_maven_cache
      - store_test_results:
          path: hedera-mirror-importer/target/failsafe-reports

  build_rest:
    docker:
      - image: node:12.10.0
      - image: circleci/postgres:9.6.14
        environment:
          POSTGRES_DB: mirror_node_integration
          POSTGRES_USER: mirror_node
          POSTGRES_PASSWORD: mirror_node_pass
    steps:
      - checkout:
      - restore_cache:
          keys:
            - npm-v1-{{ .Branch }}-{{ checksum "hedera-mirror-rest/package-lock.json" }}
            - npm-v1-{{ .Branch }}
            - npm-v1-
      - run:
          working_directory: "hedera-mirror-rest"
          name: Resolve dependencies
          command: npm ci
      - save_cache:
          key: npm-v1-{{ .Branch }}-{{ checksum "hedera-mirror-rest/package-lock.json" }}
          paths:
            - node_modules
            - .node-flywaydb
            - ~/.npm
      - run:
          working_directory: "hedera-mirror-rest"
          name: Run npm test
          command: npm test
          environment:
            TEST_DB_HOST: "127.0.0.1"
            TEST_DB_NAME: "mirror_node_integration"
      - store_test_results:
          path: hedera-mirror-rest/target/jest-junit
      - run:
          working_directory: "hedera-mirror-rest"
          name: Collecting assets
          command: |
            set -ex
            VERSION_TAG=${CIRCLE_TAG/*\//}
            NAME=hedera-mirror-rest-${VERSION_TAG:-b$CIRCLE_BUILD_NUM}
            npm pack
            mkdir -p /tmp/workspace/artifacts
            mv hedera-mirror-rest*.tgz /tmp/workspace/artifacts/${NAME}.tgz
      - *persist_artifacts

  release_artifacts:
    docker:
      - image: adoptopenjdk:11-jdk-hotspot
    steps:
      - *attach_workspace
      - store_artifacts:
          path: /tmp/workspace/artifacts

  publish_images:
    machine:
      image: ubuntu-1604:201903-01
    environment:
      MAVEN_CLI_OPTS: --batch-mode --no-transfer-progress --show-version -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
      JAVA_HOME: /usr/lib/jvm/java-11-openjdk-amd64
      GOOGLE_APPLICATION_CREDENTIALS: json_key_file
    steps:
      - checkout
      - run:
          name: Install OpenJDK 11
          command: |
            sudo add-apt-repository ppa:openjdk-r/ppa \
            && sudo apt-get update -q \
            && sudo apt install -y openjdk-11-jdk
      - run:
          name: Setup docker-credential-gcr
          command: |
            VERSION=2.0.0
            curl -fsSL "https://github.com/GoogleCloudPlatform/docker-credential-gcr/releases/download/v${VERSION}/docker-credential-gcr_linux_amd64-${VERSION}.tar.gz" \
              | tar xz > docker-credential-gcr
            sudo mv docker-credential-gcr /usr/bin/docker-credential-gcr
            chmod +x /usr/bin/docker-credential-gcr
            echo ${GCR_JSON_KEY_FILE} > json_key_file
            docker-credential-gcr configure-docker
      - *pom_checksum
      - *restore_maven_cache
      - run:
          name: Running maven deploy
          command: ./mvnw ${MAVEN_CLI_OPTS} deploy -DskipTests
      - *save_maven_cache
