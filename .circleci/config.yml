version: 2

references:
  workspace_root: &workspace_root /tmp/workspace
  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

workflows:
  version: 2
  main:
    jobs:
      - build_mirror_importer:
          filters: # required since `release_artifacts` has tag filters AND requires `this`
            branches:
              only: /.*/
            tags:
              only: /.*/
      - build_mirror_rest:
          filters: # required since `release_artifacts` has tag filters AND requires `this`
            branches:
              only: /.*/
            tags:
              only: /.*/
      - release_artifacts:
          requires:
            - build_mirror_importer
            - build_mirror_rest
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/

jobs:
  build_mirror_importer:
    docker:
      - image: adoptopenjdk:11-jdk-hotspot
      - image: postgres:9.6-alpine
        environment:
          POSTGRES_DB: mirror_node
          POSTGRES_PASSWORD: mirror_node_pass
          POSTGRES_USER: mirror_node
    steps:
      - checkout
      - restore_cache:
          keys:
            - maven-v1-{{ .Branch }}-{{ checksum "pom.xml" }}-{{ checksum "mirror-importer/pom.xml" }}
            - maven-v1-{{ .Branch }}-{{ checksum "pom.xml" }}
            - maven-v1-{{ .Branch }}
            - maven-v1-
      - run:
          name: Running maven (validate, compile, test, package)
          command: ./mvnw package -pl mirror-importer -am
      - save_cache:
          key: maven-v1-{{ .Branch }}-{{ checksum "pom.xml" }}-{{ checksum "mirror-importer/pom.xml" }}
          paths:
            - ~/.m2
      - store_test_results:
          path: mirror-importer/target/surefire-reports
      - run:
          name: Upload Code Coverage
          command: bash <(curl -s https://codecov.io/bash)
      - run:
          name: Collecting mirror-importer assets
          command: |
            NAME=mirror-importer-${CIRCLE_TAG:-b$CIRCLE_BUILD_NUM}
            WORKSPACE=/tmp/workspace
            mkdir -p ${WORKSPACE}/${NAME}
            mv mirror-importer/target/mirror-importer-*.jar ${WORKSPACE}/${NAME}/mirror-importer.jar
            mv mirror-importer/scripts ${WORKSPACE}/${NAME}
            mkdir -p ${WORKSPACE}/artifacts
            tar -czf ${WORKSPACE}/artifacts/${NAME}.tgz -C ${WORKSPACE} ${NAME}
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - artifacts

  build_mirror_rest:
    docker:
      - image: node:12.10.0
      - image: circleci/postgres:9.6.14
        environment:
          POSTGRES_DB: mirror_node_integration
          POSTGRES_USER: mirror_node
          POSTGRES_PASSWORD: mirror_node_pass
    steps:
      - checkout:
      - restore_cache:
          keys:
            - npm-v1-{{ .Branch }}-{{ checksum "mirror-rest/package-lock.json" }}
            - npm-v1-{{ .Branch }}
            - npm-v1-
      - run:
          working_directory: "mirror-rest"
          name: Run npm ci (ensure node_modules is based on package-lock.json).
          command: npm ci
      - save_cache:
          key: npm-v1-{{ .Branch }}-{{ checksum "mirror-rest/package-lock.json" }}
          paths:
            - node_modules
            - .node-flywaydb
            - ~/.npm
      - run:
          working_directory: "mirror-rest"
          name: Run npm test
          command: npm test
          environment:
            TEST_DB_HOST: "127.0.0.1"
            TEST_DB_NAME: "mirror_node_integration"
      - store_test_results:
          path: mirror-rest/target/jest-junit
      - run:
          working_directory: "mirror-rest"
          name: Collecting mirror-rest assets
          command: |
            NAME=mirror-rest-${CIRCLE_TAG:-b$CIRCLE_BUILD_NUM}
            npm pack
            mkdir -p /tmp/workspace/artifacts
            mv mirror-rest*.tgz /tmp/workspace/artifacts/${NAME}.tgz
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - artifacts

  release_artifacts:
    docker:
      - image: adoptopenjdk:11-jdk-hotspot
    steps:
      - *attach_workspace
      - store_artifacts:
          path: /tmp/workspace/artifacts
